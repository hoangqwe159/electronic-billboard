/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package BillboardControlPanel.view;

import ServerConnection.Exceptions.ServerClosedException;
import BillboardControlPanel.controller.DAO;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.IOException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JOptionPane;

import ServerConnection.Exceptions.SessionExpiredException;
import ServerConnection.ServerConnection;
import Commmunication.Message;
import Commmunication.Requests.*;
import Commmunication.Response.*;
import BillboardControlPanel.model.Billboard;
import BillboardControlPanel.model.Schedule;
import BillboardControlPanel.model.SortedListModel;
import Utils.Token.Token;

/**
 * Schedule Billboards Page
 * @author Asus
 */
public class ScheduleBillboardsPage extends javax.swing.JFrame {

    /**
     * Creates new form ScheduleBillboardsPage
     */
    
    private Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
    private ArrayList<Schedule> listSchedule;
    private ArrayList<Billboard> listBillboard;
    private DateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
    private DateFormat hourFormat = new SimpleDateFormat("HH:mm");
    private DateFormat hourDateFormat = new SimpleDateFormat("HH:mm dd-MM-yyyy");
    private DateFormat sqlDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm");
    private String token;
    private String permission;
    private String currentUser;
    private String userId;

    public ScheduleBillboardsPage(String token) {
        this.token = token;
        String decodedToken = Token.decodeToken(this.token);
        //Get user information from decoded token
        this.permission = decodedToken.split("%%%%")[2];
        this.currentUser = decodedToken.split("%%%%")[1];
        this.userId = decodedToken.split("%%%%")[0];

        initComponents();
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        lbIsScheduled.setVisible(false);

        Date currentDate = new Date();
        long diffDay = 24 * 60 * 60 * 1000;
        lbDay1.setText(dateFormat.format(currentDate));
        lbDay2.setText(dateFormat.format(new Date(currentDate.getTime() + diffDay)));
        lbDay3.setText(dateFormat.format(new Date(currentDate.getTime() + 2* diffDay)));
        lbDay4.setText(dateFormat.format(new Date(currentDate.getTime() + 3* diffDay)));
        lbDay5.setText(dateFormat.format(new Date(currentDate.getTime() + 4* diffDay)));
        lbDay6.setText(dateFormat.format(new Date(currentDate.getTime() + 5* diffDay)));
        lbDay7.setText(dateFormat.format(new Date(currentDate.getTime() + 6* diffDay)));

        try {
            listSchedule = new DAO().getListSchedule(this.token);
            listBillboard = new DAO().getListBillboard(this.token);
        } catch (ServerClosedException e) {
            JOptionPane.showMessageDialog(schedulePanel, e.getMessage());
            System.exit(0);
        }catch (SessionExpiredException e){
            JOptionPane.showMessageDialog(schedulePanel, e.getMessage());
            System.exit(0);
        }

        showSchedule();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        schedulePanel = new javax.swing.JPanel();
        sidepanel = new javax.swing.JPanel();
        separator = new javax.swing.JSeparator();
        lbAppNameLeft = new javax.swing.JLabel();
        btnHome = new javax.swing.JPanel();
        lbIconHome = new javax.swing.JLabel();
        lbHome = new javax.swing.JLabel();
        btnCreate = new javax.swing.JPanel();
        lbIconCreate = new javax.swing.JLabel();
        lbCreate = new javax.swing.JLabel();
        btnList = new javax.swing.JPanel();
        lbIconList = new javax.swing.JLabel();
        lbList = new javax.swing.JLabel();
        btnSchedule = new javax.swing.JPanel();
        lbIconSchedule = new javax.swing.JLabel();
        lbSchedule = new javax.swing.JLabel();
        btnEdit = new javax.swing.JPanel();
        lbIconEdit = new javax.swing.JLabel();
        lbEdit = new javax.swing.JLabel();
        btnLogOut = new javax.swing.JPanel();
        lbIconLogout = new javax.swing.JLabel();
        lbLogout = new javax.swing.JLabel();
        scheduleListPanel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        listDay1 = new javax.swing.JList<>();
        lbDay1 = new javax.swing.JLabel();
        lbDay2 = new javax.swing.JLabel();
        lbDay3 = new javax.swing.JLabel();
        lbDay4 = new javax.swing.JLabel();
        lbDay5 = new javax.swing.JLabel();
        lbDay6 = new javax.swing.JLabel();
        lbDay7 = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        listDay2 = new javax.swing.JList<>();
        jScrollPane10 = new javax.swing.JScrollPane();
        listDay3 = new javax.swing.JList<>();
        jScrollPane11 = new javax.swing.JScrollPane();
        listDay4 = new javax.swing.JList<>();
        jScrollPane12 = new javax.swing.JScrollPane();
        listDay5 = new javax.swing.JList<>();
        jScrollPane13 = new javax.swing.JScrollPane();
        listDay6 = new javax.swing.JList<>();
        jScrollPane14 = new javax.swing.JScrollPane();
        listDay7 = new javax.swing.JList<>();
        jLabel7 = new javax.swing.JLabel();
        lbDay8 = new javax.swing.JLabel();
        jScrollPane15 = new javax.swing.JScrollPane();
        listDay8 = new javax.swing.JList<>();
        lbScheduleId1 = new javax.swing.JLabel();
        lbTime1 = new javax.swing.JLabel();
        lbTime2 = new javax.swing.JLabel();
        lbScheduleId2 = new javax.swing.JLabel();
        lbTime3 = new javax.swing.JLabel();
        lbScheduleId3 = new javax.swing.JLabel();
        lbTime4 = new javax.swing.JLabel();
        lbScheduleId4 = new javax.swing.JLabel();
        lbTime5 = new javax.swing.JLabel();
        lbScheduleId5 = new javax.swing.JLabel();
        lbTime6 = new javax.swing.JLabel();
        lbScheduleId6 = new javax.swing.JLabel();
        lbTime7 = new javax.swing.JLabel();
        lbScheduleId7 = new javax.swing.JLabel();
        inputPanel = new javax.swing.JPanel();
        lbInputTitle = new javax.swing.JLabel();
        lbScheduleId = new javax.swing.JLabel();
        lbBillboardId = new javax.swing.JLabel();
        lbStartTime = new javax.swing.JLabel();
        txtStartTime = new javax.swing.JTextField();
        txtScheduleId = new javax.swing.JTextField();
        lbTimeLimit = new javax.swing.JLabel();
        txtTimeLimit = new javax.swing.JTextField();
        txtNextRun = new javax.swing.JTextField();
        lbNextRun = new javax.swing.JLabel();
        btnCancel = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        txtBillboardId = new javax.swing.JTextField();
        lbMessage = new javax.swing.JLabel();
        txtMessage = new javax.swing.JTextField();
        lbIsScheduled = new javax.swing.JLabel();
        btnDelete = new javax.swing.JButton();
        lbBackground = new javax.swing.JLabel();
        welcomePanel = new javax.swing.JPanel();
        lbWelcomeTitle = new javax.swing.JLabel();
        lbWelcomeInfo = new javax.swing.JLabel();
        lbAppName = new javax.swing.JLabel();
        lbClose = new javax.swing.JLabel();
        lbUserInfo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        schedulePanel.setBackground(new java.awt.Color(255, 255, 255));
        schedulePanel.setMinimumSize(new java.awt.Dimension(1920, 1080));
        schedulePanel.setPreferredSize(new java.awt.Dimension(1920, 1080));
        schedulePanel.setLayout(null);

        sidepanel.setBackground(new java.awt.Color(54, 33, 89));
        sidepanel.setPreferredSize(new Dimension(screenSize.width / 5, screenSize.height));
        sidepanel.setLayout(null);

        separator.setPreferredSize(new java.awt.Dimension(50, 5));
        sidepanel.add(separator);
        separator.setBounds(30, 90, 220, 10);

        lbAppNameLeft.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lbAppNameLeft.setForeground(new java.awt.Color(204, 204, 204));
        lbAppNameLeft.setText("BBCreator");
        sidepanel.add(lbAppNameLeft);
        lbAppNameLeft.setBounds(30, 50, 115, 32);

        btnHome.setBackground(new java.awt.Color(64, 43, 100));
        btnHome.setPreferredSize(new Dimension(screenSize.width / 5, 50) );
        btnHome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnHomeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnHomeMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnHomeMousePressed(evt);
            }
        });

        lbIconHome.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbIconHome.setIcon(new javax.swing.ImageIcon("src/main/java/BillboardControlPanel/view/images/icons8_home_15px_1.png")); // NOI18N
        lbIconHome.setToolTipText("");
        lbIconHome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lbIconHomebtn_homeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lbIconHomebtn_homeMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lbIconHomebtn_homeMousePressed(evt);
            }
        });

        lbHome.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbHome.setForeground(new java.awt.Color(204, 204, 204));
        lbHome.setText("Home");
        lbHome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lbHomebtn_homeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lbHomebtn_homeMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lbHomebtn_homeMousePressed(evt);
            }
        });

        javax.swing.GroupLayout btnHomeLayout = new javax.swing.GroupLayout(btnHome);
        btnHome.setLayout(btnHomeLayout);
        btnHomeLayout.setHorizontalGroup(
            btnHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnHomeLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(lbIconHome, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbHome)
                .addContainerGap(272, Short.MAX_VALUE))
        );
        btnHomeLayout.setVerticalGroup(
            btnHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnHomeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(btnHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lbHome)
                    .addComponent(lbIconHome, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        sidepanel.add(btnHome);
        btnHome.setBounds(0, 190, 384, 50);

        btnCreate.setBackground(new java.awt.Color(64, 43, 100));
        btnCreate.setPreferredSize(new Dimension(screenSize.width / 5, 50 ));
        btnCreate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnCreateMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnCreateMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnCreateMousePressed(evt);
            }
        });

        lbIconCreate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbIconCreate.setIcon(new javax.swing.ImageIcon("src/main/java/BillboardControlPanel/view/images/icons8_create_15px.png")); // NOI18N
        lbIconCreate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnCreateMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnCreateMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnCreateMousePressed(evt);
            }
        });

        lbCreate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbCreate.setForeground(new java.awt.Color(204, 204, 204));
        lbCreate.setText("Create Billboards");
        lbCreate.setToolTipText("");
        lbCreate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnCreateMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnCreateMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnCreateMousePressed(evt);
            }
        });

        javax.swing.GroupLayout btnCreateLayout = new javax.swing.GroupLayout(btnCreate);
        btnCreate.setLayout(btnCreateLayout);
        btnCreateLayout.setHorizontalGroup(
            btnCreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnCreateLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(lbIconCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbCreate)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        btnCreateLayout.setVerticalGroup(
            btnCreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnCreateLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(btnCreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbIconCreate, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                    .addComponent(lbCreate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(12, 12, 12))
        );

        sidepanel.add(btnCreate);
        btnCreate.setBounds(0, 240, 384, 50);

        btnList.setBackground(new java.awt.Color(64, 43, 100));
        btnList.setPreferredSize(new Dimension(screenSize.width / 5, 50 ));
        btnList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnListlb_list_billboardsMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnListlb_list_billboardsMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnListlb_list_billboardsMousePressed(evt);
            }
        });

        lbIconList.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbIconList.setIcon(new javax.swing.ImageIcon("src/main/java/BillboardControlPanel/view/images/icons8_list_15px.png")); // NOI18N
        lbIconList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lbIconListlb_list_billboardsMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lbIconListlb_list_billboardsMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lbIconListlb_list_billboardsMousePressed(evt);
            }
        });

        lbList.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbList.setForeground(new java.awt.Color(204, 204, 204));
        lbList.setText("List Billboards");
        lbList.setToolTipText("");
        lbList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lbListMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lbListMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lbListMousePressed(evt);
            }
        });

        javax.swing.GroupLayout btnListLayout = new javax.swing.GroupLayout(btnList);
        btnList.setLayout(btnListLayout);
        btnListLayout.setHorizontalGroup(
            btnListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnListLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(lbIconList, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbList)
                .addContainerGap(223, Short.MAX_VALUE))
        );
        btnListLayout.setVerticalGroup(
            btnListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnListLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(btnListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbList, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                    .addComponent(lbIconList, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE))
                .addContainerGap())
        );

        sidepanel.add(btnList);
        btnList.setBounds(0, 290, 384, 50);

        btnSchedule.setBackground(new java.awt.Color(85, 65, 118));
        btnSchedule.setPreferredSize(new Dimension(screenSize.width / 5, 50 ));

        lbIconSchedule.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbIconSchedule.setIcon(new javax.swing.ImageIcon("src/main/java/BillboardControlPanel/view/images/icons8_schedule_15px_1.png")); // NOI18N

        lbSchedule.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbSchedule.setForeground(new java.awt.Color(204, 204, 204));
        lbSchedule.setText("Schedule Billboards");
        lbSchedule.setToolTipText("");

        javax.swing.GroupLayout btnScheduleLayout = new javax.swing.GroupLayout(btnSchedule);
        btnSchedule.setLayout(btnScheduleLayout);
        btnScheduleLayout.setHorizontalGroup(
            btnScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnScheduleLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(lbIconSchedule, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbSchedule)
                .addContainerGap(185, Short.MAX_VALUE))
        );
        btnScheduleLayout.setVerticalGroup(
            btnScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnScheduleLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(btnScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lbSchedule, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                    .addComponent(lbIconSchedule, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        sidepanel.add(btnSchedule);
        btnSchedule.setBounds(0, 340, 384, 50);

        btnEdit.setBackground(new java.awt.Color(64, 43, 100));
        btnEdit.setPreferredSize(new Dimension(screenSize.width / 5, 50 ));
        btnEdit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnEditjLabel16MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnEditjLabel16MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lbEditMousePressed(evt);
            }
        });

        lbIconEdit.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbIconEdit.setIcon(new javax.swing.ImageIcon("src/main/java/BillboardControlPanel/view/images/icons8_edit_profile_15px_1.png")); // NOI18N
        lbIconEdit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lbIconEditMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lbIconEditMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lbEditMousePressed(evt);
            }
        });

        lbEdit.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbEdit.setForeground(new java.awt.Color(204, 204, 204));
        lbEdit.setText("Edit Users");
        lbEdit.setToolTipText("");
        lbEdit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lbEditjLabel16MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lbEditjLabel16MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lbEditMousePressed(evt);
            }
        });

        javax.swing.GroupLayout btnEditLayout = new javax.swing.GroupLayout(btnEdit);
        btnEdit.setLayout(btnEditLayout);
        btnEditLayout.setHorizontalGroup(
            btnEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnEditLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(lbIconEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbEdit)
                .addContainerGap(252, Short.MAX_VALUE))
        );
        btnEditLayout.setVerticalGroup(
            btnEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, btnEditLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(btnEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbIconEdit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbEdit, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE))
                .addContainerGap())
        );

        sidepanel.add(btnEdit);
        btnEdit.setBounds(0, 390, 384, 50);

        btnLogOut.setBackground(new java.awt.Color(64, 43, 100));
        btnLogOut.setPreferredSize(new Dimension(screenSize.width / 5, 50 ));
        btnLogOut.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lbLogoutMousePressed(evt);
            }
        });

        lbIconLogout.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbIconLogout.setIcon(new javax.swing.ImageIcon("src/main/java/BillboardControlPanel/view/images/icons8_logout_rounded_left_15px.png")); // NOI18N
        lbIconLogout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lbLogoutMousePressed(evt);
            }
        });

        lbLogout.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbLogout.setForeground(new java.awt.Color(204, 204, 204));
        lbLogout.setText("Log Out");
        lbLogout.setToolTipText("");
        lbLogout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lbLogoutMousePressed(evt);
            }
        });

        javax.swing.GroupLayout btnLogOutLayout = new javax.swing.GroupLayout(btnLogOut);
        btnLogOut.setLayout(btnLogOutLayout);
        btnLogOutLayout.setHorizontalGroup(
            btnLogOutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnLogOutLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(lbIconLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbLogout)
                .addContainerGap(264, Short.MAX_VALUE))
        );
        btnLogOutLayout.setVerticalGroup(
            btnLogOutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, btnLogOutLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(btnLogOutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbIconLogout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbLogout, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE))
                .addContainerGap())
        );

        sidepanel.add(btnLogOut);
        btnLogOut.setBounds(0, 950, 384, 60);

        schedulePanel.add(sidepanel);
        sidepanel.setBounds(0, 0, 384, 1080);

        scheduleListPanel.setLayout(null);

        listDay1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listDay1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listDay1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                listDay1MousePressed(evt);
            }
        });
        jScrollPane3.setViewportView(listDay1);

        scheduleListPanel.add(jScrollPane3);
        jScrollPane3.setBounds(40, 130, 170, 220);

        lbDay1.setBackground(new java.awt.Color(255, 255, 255));
        lbDay1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbDay1.setText("jLabel7");
        lbDay1.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 0, new java.awt.Color(51, 51, 51)));
        lbDay1.setOpaque(true);
        scheduleListPanel.add(lbDay1);
        lbDay1.setBounds(40, 60, 170, 40);

        lbDay2.setBackground(new java.awt.Color(255, 255, 255));
        lbDay2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbDay2.setText("jLabel7");
        lbDay2.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 0, new java.awt.Color(51, 51, 51)));
        lbDay2.setOpaque(true);
        scheduleListPanel.add(lbDay2);
        lbDay2.setBounds(210, 60, 170, 40);

        lbDay3.setBackground(new java.awt.Color(255, 255, 255));
        lbDay3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbDay3.setText("jLabel7");
        lbDay3.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 0, new java.awt.Color(51, 51, 51)));
        lbDay3.setOpaque(true);
        scheduleListPanel.add(lbDay3);
        lbDay3.setBounds(380, 60, 170, 40);

        lbDay4.setBackground(new java.awt.Color(255, 255, 255));
        lbDay4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbDay4.setText("jLabel7");
        lbDay4.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 0, new java.awt.Color(51, 51, 51)));
        lbDay4.setOpaque(true);
        scheduleListPanel.add(lbDay4);
        lbDay4.setBounds(550, 60, 170, 40);

        lbDay5.setBackground(new java.awt.Color(255, 255, 255));
        lbDay5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbDay5.setText("jLabel7");
        lbDay5.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 0, new java.awt.Color(51, 51, 51)));
        lbDay5.setOpaque(true);
        scheduleListPanel.add(lbDay5);
        lbDay5.setBounds(720, 60, 170, 40);

        lbDay6.setBackground(new java.awt.Color(255, 255, 255));
        lbDay6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbDay6.setText("jLabel7");
        lbDay6.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 0, new java.awt.Color(51, 51, 51)));
        lbDay6.setOpaque(true);
        scheduleListPanel.add(lbDay6);
        lbDay6.setBounds(890, 60, 170, 40);

        lbDay7.setBackground(new java.awt.Color(255, 255, 255));
        lbDay7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbDay7.setText("jLabel7");
        lbDay7.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(51, 51, 51)));
        lbDay7.setOpaque(true);
        scheduleListPanel.add(lbDay7);
        lbDay7.setBounds(1060, 60, 170, 40);

        listDay2.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listDay2.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listDay2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                listDay2MousePressed(evt);
            }
        });
        jScrollPane9.setViewportView(listDay2);

        scheduleListPanel.add(jScrollPane9);
        jScrollPane9.setBounds(210, 130, 170, 220);

        listDay3.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listDay3.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listDay3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                listDay3MousePressed(evt);
            }
        });
        jScrollPane10.setViewportView(listDay3);

        scheduleListPanel.add(jScrollPane10);
        jScrollPane10.setBounds(380, 130, 170, 220);

        listDay4.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listDay4.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listDay4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                listDay4MousePressed(evt);
            }
        });
        jScrollPane11.setViewportView(listDay4);

        scheduleListPanel.add(jScrollPane11);
        jScrollPane11.setBounds(550, 130, 170, 220);

        listDay5.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listDay5.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listDay5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                listDay5MousePressed(evt);
            }
        });
        jScrollPane12.setViewportView(listDay5);

        scheduleListPanel.add(jScrollPane12);
        jScrollPane12.setBounds(720, 130, 170, 220);

        listDay6.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listDay6.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listDay6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                listDay6MousePressed(evt);
            }
        });
        jScrollPane13.setViewportView(listDay6);

        scheduleListPanel.add(jScrollPane13);
        jScrollPane13.setBounds(890, 130, 170, 220);

        listDay7.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listDay7.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listDay7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                listDay7MousePressed(evt);
            }
        });
        jScrollPane14.setViewportView(listDay7);

        scheduleListPanel.add(jScrollPane14);
        jScrollPane14.setBounds(1060, 130, 170, 220);

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Schedule List");
        jLabel7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        scheduleListPanel.add(jLabel7);
        jLabel7.setBounds(640, 0, 200, 50);

        lbDay8.setBackground(new java.awt.Color(255, 255, 255));
        lbDay8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbDay8.setText("Billboard ID");
        lbDay8.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(51, 51, 51)));
        lbDay8.setOpaque(true);
        scheduleListPanel.add(lbDay8);
        lbDay8.setBounds(1290, 60, 170, 70);

        listDay8.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listDay8.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listDay8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                listDay8MousePressed(evt);
            }
        });
        jScrollPane15.setViewportView(listDay8);

        scheduleListPanel.add(jScrollPane15);
        jScrollPane15.setBounds(1290, 130, 170, 220);

        lbScheduleId1.setBackground(new java.awt.Color(255, 255, 255));
        lbScheduleId1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbScheduleId1.setText("Schedule ID");
        lbScheduleId1.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 0, new java.awt.Color(51, 51, 51)));
        lbScheduleId1.setOpaque(true);
        scheduleListPanel.add(lbScheduleId1);
        lbScheduleId1.setBounds(125, 100, 85, 30);

        lbTime1.setBackground(new java.awt.Color(255, 255, 255));
        lbTime1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbTime1.setText("Time");
        lbTime1.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 0, new java.awt.Color(51, 51, 51)));
        lbTime1.setOpaque(true);
        scheduleListPanel.add(lbTime1);
        lbTime1.setBounds(40, 100, 85, 30);

        lbTime2.setBackground(new java.awt.Color(255, 255, 255));
        lbTime2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbTime2.setText("Time");
        lbTime2.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 0, new java.awt.Color(51, 51, 51)));
        lbTime2.setOpaque(true);
        scheduleListPanel.add(lbTime2);
        lbTime2.setBounds(210, 100, 85, 30);

        lbScheduleId2.setBackground(new java.awt.Color(255, 255, 255));
        lbScheduleId2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbScheduleId2.setText("Schedule ID");
        lbScheduleId2.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 0, new java.awt.Color(51, 51, 51)));
        lbScheduleId2.setOpaque(true);
        scheduleListPanel.add(lbScheduleId2);
        lbScheduleId2.setBounds(295, 100, 85, 30);

        lbTime3.setBackground(new java.awt.Color(255, 255, 255));
        lbTime3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbTime3.setText("Time");
        lbTime3.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 0, new java.awt.Color(51, 51, 51)));
        lbTime3.setOpaque(true);
        scheduleListPanel.add(lbTime3);
        lbTime3.setBounds(380, 100, 85, 30);

        lbScheduleId3.setBackground(new java.awt.Color(255, 255, 255));
        lbScheduleId3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbScheduleId3.setText("Schedule ID");
        lbScheduleId3.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 0, new java.awt.Color(51, 51, 51)));
        lbScheduleId3.setOpaque(true);
        scheduleListPanel.add(lbScheduleId3);
        lbScheduleId3.setBounds(465, 100, 85, 30);

        lbTime4.setBackground(new java.awt.Color(255, 255, 255));
        lbTime4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbTime4.setText("Time");
        lbTime4.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 0, new java.awt.Color(51, 51, 51)));
        lbTime4.setOpaque(true);
        scheduleListPanel.add(lbTime4);
        lbTime4.setBounds(550, 100, 85, 30);

        lbScheduleId4.setBackground(new java.awt.Color(255, 255, 255));
        lbScheduleId4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbScheduleId4.setText("Schedule ID");
        lbScheduleId4.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 0, new java.awt.Color(51, 51, 51)));
        lbScheduleId4.setOpaque(true);
        scheduleListPanel.add(lbScheduleId4);
        lbScheduleId4.setBounds(635, 100, 85, 30);

        lbTime5.setBackground(new java.awt.Color(255, 255, 255));
        lbTime5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbTime5.setText("Time");
        lbTime5.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 0, new java.awt.Color(51, 51, 51)));
        lbTime5.setOpaque(true);
        scheduleListPanel.add(lbTime5);
        lbTime5.setBounds(720, 100, 85, 30);

        lbScheduleId5.setBackground(new java.awt.Color(255, 255, 255));
        lbScheduleId5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbScheduleId5.setText("Schedule ID");
        lbScheduleId5.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 0, new java.awt.Color(51, 51, 51)));
        lbScheduleId5.setOpaque(true);
        scheduleListPanel.add(lbScheduleId5);
        lbScheduleId5.setBounds(805, 100, 85, 30);

        lbTime6.setBackground(new java.awt.Color(255, 255, 255));
        lbTime6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbTime6.setText("Time");
        lbTime6.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 0, new java.awt.Color(51, 51, 51)));
        lbTime6.setOpaque(true);
        scheduleListPanel.add(lbTime6);
        lbTime6.setBounds(890, 100, 85, 30);

        lbScheduleId6.setBackground(new java.awt.Color(255, 255, 255));
        lbScheduleId6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbScheduleId6.setText("Schedule ID");
        lbScheduleId6.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 0, new java.awt.Color(51, 51, 51)));
        lbScheduleId6.setOpaque(true);
        scheduleListPanel.add(lbScheduleId6);
        lbScheduleId6.setBounds(975, 100, 85, 30);

        lbTime7.setBackground(new java.awt.Color(255, 255, 255));
        lbTime7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbTime7.setText("Time");
        lbTime7.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 0, new java.awt.Color(51, 51, 51)));
        lbTime7.setOpaque(true);
        scheduleListPanel.add(lbTime7);
        lbTime7.setBounds(1060, 100, 85, 30);

        lbScheduleId7.setBackground(new java.awt.Color(255, 255, 255));
        lbScheduleId7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbScheduleId7.setText("Schedule ID");
        lbScheduleId7.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(51, 51, 51)));
        lbScheduleId7.setOpaque(true);
        scheduleListPanel.add(lbScheduleId7);
        lbScheduleId7.setBounds(1145, 100, 85, 30);

        schedulePanel.add(scheduleListPanel);
        scheduleListPanel.setBounds(420, 270, 1480, 400);

        inputPanel.setBackground(new java.awt.Color(250, 250, 250));
        inputPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204)));

        lbInputTitle.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lbInputTitle.setForeground(new java.awt.Color(90, 148, 210));
        lbInputTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbInputTitle.setText("Schedule your billboard");

        lbScheduleId.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbScheduleId.setForeground(new java.awt.Color(90, 148, 210));
        lbScheduleId.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbScheduleId.setText("Schedule ID");

        lbBillboardId.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbBillboardId.setForeground(new java.awt.Color(90, 148, 210));
        lbBillboardId.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbBillboardId.setText("Billboard ID");

        lbStartTime.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbStartTime.setForeground(new java.awt.Color(90, 148, 210));
        lbStartTime.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbStartTime.setText("Start time (hh:mm dd-mm-yyyy)");

        txtStartTime.setBackground(new java.awt.Color(250, 250, 250));
        txtStartTime.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtStartTime.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(12, 91, 160)));

        txtScheduleId.setEditable(false);
        txtScheduleId.setBackground(new java.awt.Color(250, 250, 250));
        txtScheduleId.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtScheduleId.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(12, 91, 160)));

        lbTimeLimit.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbTimeLimit.setForeground(new java.awt.Color(90, 148, 210));
        lbTimeLimit.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbTimeLimit.setText("Time limit (minute)");

        txtTimeLimit.setBackground(new java.awt.Color(250, 250, 250));
        txtTimeLimit.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtTimeLimit.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(12, 91, 160)));

        txtNextRun.setBackground(new java.awt.Color(250, 250, 250));
        txtNextRun.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtNextRun.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(12, 91, 160)));

        lbNextRun.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbNextRun.setForeground(new java.awt.Color(90, 148, 210));
        lbNextRun.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbNextRun.setText("Next run (minute)");

        btnCancel.setBackground(new java.awt.Color(90, 148, 210));
        btnCancel.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnCancel.setForeground(new java.awt.Color(255, 255, 255));
        btnCancel.setText("Cancel");
        btnCancel.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnCancel.setBorderPainted(false);
        btnCancel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnSave.setBackground(new java.awt.Color(90, 148, 210));
        btnSave.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnSave.setForeground(new java.awt.Color(255, 255, 255));
        btnSave.setText("Save");
        btnSave.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnSave.setBorderPainted(false);
        btnSave.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        txtBillboardId.setEditable(false);
        txtBillboardId.setBackground(new java.awt.Color(250, 250, 250));
        txtBillboardId.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtBillboardId.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(12, 91, 160)));

        lbMessage.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbMessage.setForeground(new java.awt.Color(90, 148, 210));
        lbMessage.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbMessage.setText("Billboard message");

        txtMessage.setEditable(false);
        txtMessage.setBackground(new java.awt.Color(250, 250, 250));
        txtMessage.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtMessage.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(12, 91, 160)));

        lbIsScheduled.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbIsScheduled.setForeground(new java.awt.Color(255, 0, 0));
        lbIsScheduled.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbIsScheduled.setText("This billboard is not scheduled");
        lbIsScheduled.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        btnDelete.setBackground(new java.awt.Color(90, 148, 210));
        btnDelete.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete.setText("Delete");
        btnDelete.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnDelete.setBorderPainted(false);
        btnDelete.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout inputPanelLayout = new javax.swing.GroupLayout(inputPanel);
        inputPanel.setLayout(inputPanelLayout);
        inputPanelLayout.setHorizontalGroup(
            inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputPanelLayout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(lbMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtMessage, javax.swing.GroupLayout.DEFAULT_SIZE, 338, Short.MAX_VALUE)
                        .addComponent(txtScheduleId)
                        .addComponent(txtBillboardId)
                        .addGroup(inputPanelLayout.createSequentialGroup()
                            .addComponent(lbScheduleId)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbIsScheduled)
                            .addGap(12, 12, 12)))
                    .addComponent(lbBillboardId, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lbNextRun, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTimeLimit, javax.swing.GroupLayout.DEFAULT_SIZE, 338, Short.MAX_VALUE)
                    .addComponent(lbTimeLimit, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNextRun, javax.swing.GroupLayout.DEFAULT_SIZE, 338, Short.MAX_VALUE)
                    .addComponent(txtStartTime, javax.swing.GroupLayout.DEFAULT_SIZE, 338, Short.MAX_VALUE)
                    .addComponent(lbStartTime, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(63, 63, 63))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, inputPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbInputTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(287, 287, 287))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, inputPanelLayout.createSequentialGroup()
                .addGap(153, 153, 153)
                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(95, 95, 95)
                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 106, Short.MAX_VALUE)
                .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(147, 147, 147))
        );
        inputPanelLayout.setVerticalGroup(
            inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbInputTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbIsScheduled)
                    .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lbStartTime, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lbScheduleId, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtScheduleId, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtStartTime, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbBillboardId, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbTimeLimit, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtBillboardId, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(txtTimeLimit, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(inputPanelLayout.createSequentialGroup()
                        .addComponent(lbNextRun, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNextRun, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(inputPanelLayout.createSequentialGroup()
                        .addComponent(lbMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(24, 24, 24)
                .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(67, 67, 67))
        );

        schedulePanel.add(inputPanel);
        inputPanel.setBounds(700, 700, 940, 350);

        lbBackground.setBackground(new java.awt.Color(245, 245, 245));
        lbBackground.setIcon(new javax.swing.ImageIcon("src/main/java/BillboardControlPanel/view/images/bg_blue.png")); // NOI18N
        schedulePanel.add(lbBackground);
        lbBackground.setBounds(383, 250, 1536, 830);

        welcomePanel.setBackground(new java.awt.Color(110, 89, 222));
        welcomePanel.setPreferredSize(new Dimension(screenSize.width / 5 * 4, 150 ));

        lbWelcomeTitle.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lbWelcomeTitle.setForeground(new java.awt.Color(204, 204, 204));
        lbWelcomeTitle.setText("Edit Schedule");

        lbWelcomeInfo.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        lbWelcomeInfo.setForeground(new java.awt.Color(204, 204, 204));
        lbWelcomeInfo.setText("Schedule billboards to be displayed on the Viewers");
        lbWelcomeInfo.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        javax.swing.GroupLayout welcomePanelLayout = new javax.swing.GroupLayout(welcomePanel);
        welcomePanel.setLayout(welcomePanelLayout);
        welcomePanelLayout.setHorizontalGroup(
            welcomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(welcomePanelLayout.createSequentialGroup()
                .addGap(94, 94, 94)
                .addGroup(welcomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbWelcomeInfo)
                    .addComponent(lbWelcomeTitle))
                .addContainerGap(707, Short.MAX_VALUE))
        );
        welcomePanelLayout.setVerticalGroup(
            welcomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, welcomePanelLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(lbWelcomeTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbWelcomeInfo)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        schedulePanel.add(welcomePanel);
        welcomePanel.setBounds(384, 90, 1610, 160);

        lbAppName.setBackground(new java.awt.Color(51, 51, 51));
        lbAppName.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lbAppName.setText("We ♥ BBCreator");
        schedulePanel.add(lbAppName);
        lbAppName.setBounds(470, 20, 137, 25);

        lbClose.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lbClose.setForeground(new java.awt.Color(54, 33, 89));
        lbClose.setText("X");
        lbClose.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lbClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lbCloseMousePressed(evt);
            }
        });
        schedulePanel.add(lbClose);
        lbClose.setBounds(1880, 10, 16, 32);

        lbUserInfo.setBackground(new java.awt.Color(51, 51, 51));
        lbUserInfo.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        lbUserInfo.setText("Username: " + currentUser + "  ID: " + userId );
        schedulePanel.add(lbUserInfo);
        lbUserInfo.setBounds(1600, 15, 220, 22);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(schedulePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(schedulePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lbIconHomebtn_homeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbIconHomebtn_homeMouseEntered
        btnHome.setBackground(new java.awt.Color(85,65,118));
    }//GEN-LAST:event_lbIconHomebtn_homeMouseEntered

    private void lbIconHomebtn_homeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbIconHomebtn_homeMouseExited
        btnHome.setBackground(new java.awt.Color(64, 43, 100));
    }//GEN-LAST:event_lbIconHomebtn_homeMouseExited

    private void lbIconHomebtn_homeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbIconHomebtn_homeMousePressed
        setVisible(false);
        new Home(token).setVisible(true);
    }//GEN-LAST:event_lbIconHomebtn_homeMousePressed

    private void lbHomebtn_homeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbHomebtn_homeMouseEntered
        btnHome.setBackground(new java.awt.Color(85,65,118));
    }//GEN-LAST:event_lbHomebtn_homeMouseEntered

    private void lbHomebtn_homeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbHomebtn_homeMouseExited
        btnHome.setBackground(new java.awt.Color(64, 43, 100));
    }//GEN-LAST:event_lbHomebtn_homeMouseExited

    private void lbHomebtn_homeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbHomebtn_homeMousePressed
        setVisible(false);
        new Home("").setVisible(true);
    }//GEN-LAST:event_lbHomebtn_homeMousePressed

    private void btnHomeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnHomeMouseEntered
        btnHome.setBackground(new java.awt.Color(85,65,118));
    }//GEN-LAST:event_btnHomeMouseEntered

    private void btnHomeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnHomeMouseExited
        btnHome.setBackground(new java.awt.Color(64, 43, 100));
    }//GEN-LAST:event_btnHomeMouseExited

    private void btnHomeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnHomeMousePressed
        setVisible(false);
        new Home(token).setVisible(true);
    }//GEN-LAST:event_btnHomeMousePressed

    private void lbIconListlb_list_billboardsMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbIconListlb_list_billboardsMouseEntered
        btnList.setBackground(new java.awt.Color(85,65,118));
    }//GEN-LAST:event_lbIconListlb_list_billboardsMouseEntered

    private void lbIconListlb_list_billboardsMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbIconListlb_list_billboardsMouseExited
        btnList.setBackground(new java.awt.Color(64, 43, 100));
    }//GEN-LAST:event_lbIconListlb_list_billboardsMouseExited

    private void lbIconListlb_list_billboardsMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbIconListlb_list_billboardsMousePressed
        ListBillboardsPage listBillboardsPage = new ListBillboardsPage(token);
        listBillboardsPage.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_lbIconListlb_list_billboardsMousePressed

    private void lbListMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbListMouseEntered
        btnList.setBackground(new java.awt.Color(85,65,118));
    }//GEN-LAST:event_lbListMouseEntered

    private void lbListMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbListMouseExited
        btnList.setBackground(new java.awt.Color(64, 43, 100));
    }//GEN-LAST:event_lbListMouseExited

    private void lbListMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbListMousePressed
        ListBillboardsPage listBillboardsPage = new ListBillboardsPage(token);
        listBillboardsPage.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_lbListMousePressed

    private void btnListlb_list_billboardsMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnListlb_list_billboardsMouseEntered
        btnList.setBackground(new java.awt.Color(85,65,118));
    }//GEN-LAST:event_btnListlb_list_billboardsMouseEntered

    private void btnListlb_list_billboardsMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnListlb_list_billboardsMouseExited
        btnList.setBackground(new java.awt.Color(64, 43, 100));
    }//GEN-LAST:event_btnListlb_list_billboardsMouseExited

    private void btnListlb_list_billboardsMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnListlb_list_billboardsMousePressed
        ListBillboardsPage listBillboardsPage = new ListBillboardsPage(token);
        listBillboardsPage.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnListlb_list_billboardsMousePressed

    private void lbIconEditMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbIconEditMouseEntered
        btnEdit.setBackground(new java.awt.Color(85,65,118));
    }//GEN-LAST:event_lbIconEditMouseEntered

    private void lbIconEditMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbIconEditMouseExited
        btnEdit.setBackground(new java.awt.Color(64, 43, 100));
    }//GEN-LAST:event_lbIconEditMouseExited

    private void lbEditjLabel16MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbEditjLabel16MouseEntered
        btnEdit.setBackground(new java.awt.Color(85,65,118));
    }//GEN-LAST:event_lbEditjLabel16MouseEntered

    private void lbEditjLabel16MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbEditjLabel16MouseExited
        btnEdit.setBackground(new java.awt.Color(64, 43, 100));
    }//GEN-LAST:event_lbEditjLabel16MouseExited

    private void btnEditjLabel16MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditjLabel16MouseEntered
        btnEdit.setBackground(new java.awt.Color(85,65,118));

    }//GEN-LAST:event_btnEditjLabel16MouseEntered

    private void btnEditjLabel16MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditjLabel16MouseExited
        btnEdit.setBackground(new java.awt.Color(64, 43, 100));
    }//GEN-LAST:event_btnEditjLabel16MouseExited

    private void lbCloseMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbCloseMousePressed
        System.exit(0);
    }//GEN-LAST:event_lbCloseMousePressed


    private void listDay7MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listDay7MousePressed
        listDay1.clearSelection();
        listDay2.clearSelection();
        listDay3.clearSelection();
        listDay4.clearSelection();
        listDay5.clearSelection();
        listDay6.clearSelection();
        listDay8.clearSelection();
        
        getSelectedValue(listDay7);
    }//GEN-LAST:event_listDay7MousePressed

    private void listDay6MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listDay6MousePressed
        listDay1.clearSelection();
        listDay2.clearSelection();
        listDay3.clearSelection();
        listDay4.clearSelection();
        listDay5.clearSelection();
        listDay7.clearSelection();
        listDay8.clearSelection();
        
        getSelectedValue(listDay6);
    }//GEN-LAST:event_listDay6MousePressed

    private void listDay5MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listDay5MousePressed
        listDay1.clearSelection();
        listDay2.clearSelection();
        listDay3.clearSelection();
        listDay4.clearSelection();
        listDay6.clearSelection();
        listDay7.clearSelection();
        listDay8.clearSelection();
        
        getSelectedValue(listDay5);
    }//GEN-LAST:event_listDay5MousePressed

    private void listDay4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listDay4MousePressed
        listDay1.clearSelection();
        listDay2.clearSelection();
        listDay3.clearSelection();
        listDay6.clearSelection();
        listDay5.clearSelection();
        listDay7.clearSelection();
        listDay8.clearSelection();
        
        getSelectedValue(listDay4);
    }//GEN-LAST:event_listDay4MousePressed

    private void listDay3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listDay3MousePressed
        listDay1.clearSelection();
        listDay2.clearSelection();
        listDay6.clearSelection();
        listDay4.clearSelection();
        listDay5.clearSelection();
        listDay7.clearSelection();
        listDay8.clearSelection();
        
        getSelectedValue(listDay3);
    }//GEN-LAST:event_listDay3MousePressed

    private void listDay2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listDay2MousePressed
        listDay1.clearSelection();
        listDay6.clearSelection();
        listDay3.clearSelection();
        listDay4.clearSelection();
        listDay5.clearSelection();
        listDay7.clearSelection();
        listDay8.clearSelection();
        
        getSelectedValue(listDay2);
    }//GEN-LAST:event_listDay2MousePressed

    private void listDay1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listDay1MousePressed
        listDay2.clearSelection();
        listDay6.clearSelection();
        listDay3.clearSelection();
        listDay4.clearSelection();
        listDay5.clearSelection();
        listDay7.clearSelection();
        listDay8.clearSelection();
        
        getSelectedValue(listDay1);
    }//GEN-LAST:event_listDay1MousePressed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        inputPanel.setVisible(false);
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        String billboardId, scheduleId , timeLimit, nextRun ;
        String startTime;
        int timeLimitInt = 0, nextRunInt = 0;
        boolean isOk = true;
        boolean isSchedule = true;
        boolean isSelected =true, isValidDate = true, isInteger = true, isValidTime = true;

        //  Get information from edit panel
        billboardId = txtBillboardId.getText();
        timeLimit = txtTimeLimit.getText();
        nextRun = txtNextRun.getText();
        startTime = txtStartTime.getText();
        scheduleId = txtScheduleId.getText();

        // Check if all input fields are valid or not
        try {
            startTime = sqlDateFormat.format(hourDateFormat.parse(startTime));
        } catch (ParseException e) {

            isOk = false;
            isValidDate = false;

        }


        if (txtBillboardId.getText().equals("")){
            isOk = false;
            isSelected = false;
        }
        if (txtScheduleId.getText().equals("")){
            isSchedule = false;
        }

        try {
            timeLimitInt = Integer.parseInt(timeLimit);
            nextRunInt = Integer.parseInt(nextRun);
        } catch (Exception e) {
            isOk = false;
            isInteger = false;
        }

        if (timeLimitInt > nextRunInt) {
            isOk = false;
            isValidTime = false;
        }

        // If all input field are valid, start editing billboard
        if(isOk) {
            if(!isSchedule) {
                //Create new schedule
                try {
                    //Connect to server
                    ServerConnection svCon = new ServerConnection();
                    CreateScheduleRequest req = new CreateScheduleRequest();
                    req.setToken(this.token);
                    req.setBillboard_id(billboardId);
                    req.setNextRun(nextRun);
                    req.setStartTime(startTime + ":00");
                    req.setTimeLimit(timeLimit);
                    svCon.sendRequest(req);
                    //Get response from server
                    CreateScheduleResponse res = (CreateScheduleResponse) Message.nextMessageFromSocket(svCon.getChannel(), svCon.getByteBuffer());
                    if (res.isSuccessful()) {
                        JOptionPane.showMessageDialog(schedulePanel, "Create successfully");
                        new ScheduleBillboardsPage(token).setVisible(true);
                        this.dispose();
                    } else {
                        JOptionPane.showMessageDialog(schedulePanel, res.getMessage());
                        if(res.sessionExpired()){
                            System.exit(0);
                        }
                    }

                } catch (IOException | ServerClosedException e) {
                    JOptionPane.showMessageDialog(schedulePanel, e.getMessage());
                    System.exit(0);
                }

            } else {
                //Edit existing schedule
                try {
                    // Connect to server
                    ServerConnection svCon = new ServerConnection();
                    EditScheduleRequest req = new EditScheduleRequest();
                    req.setToken(this.token);
                    req.setSchedule_id(scheduleId);
                    req.setNextRun(nextRun);
                    req.setStartTime(startTime + ":00");
                    req.setTimeLimit(timeLimit);
                    svCon.sendRequest(req);
                    //Get response from server
                    EditScheduleResponse res = (EditScheduleResponse) Message.nextMessageFromSocket(svCon.getChannel(), svCon.getByteBuffer());
                    if (res.isSuccessful()) {
                        JOptionPane.showMessageDialog(schedulePanel, "Edit successfully");
                        new ScheduleBillboardsPage(token).setVisible(true);
                        this.dispose();
                    } else {
                        JOptionPane.showMessageDialog(schedulePanel, res.getMessage());
                        if(res.sessionExpired()){
                            System.exit(0);
                        }
                    }
                } catch (IOException | ServerClosedException e) {
                    JOptionPane.showMessageDialog(schedulePanel, e.getMessage());
                    System.exit(0);
                }
            }

        } else {
            if (!isSelected)
                JOptionPane.showMessageDialog(schedulePanel, "Choose schedule to edit");
            else if (!isValidDate)
                JOptionPane.showMessageDialog(schedulePanel, "Date is not in valid format");
            else if (!isInteger)
                JOptionPane.showMessageDialog(schedulePanel, "Time limit and next run must be integers");
            else if (!isValidTime)
                JOptionPane.showMessageDialog(schedulePanel, "Next run must be greater than time limit");

        }

    }//GEN-LAST:event_btnSaveActionPerformed

    private void lbEditMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbEditMousePressed
        EditUserPage editUserPage = new EditUserPage(token);
        editUserPage.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_lbEditMousePressed

    private void listDay8MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listDay8MousePressed
        listDay1.clearSelection();
        listDay6.clearSelection();
        listDay3.clearSelection();
        listDay4.clearSelection();
        listDay5.clearSelection();
        listDay7.clearSelection();
        listDay2.clearSelection();
        
        getSelectedBillboard(listDay8);
    }//GEN-LAST:event_listDay8MousePressed

    private void btnCreateMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCreateMouseEntered
        btnCreate.setBackground(new java.awt.Color(85,65,118));
        
        
    }//GEN-LAST:event_btnCreateMouseEntered

    private void btnCreateMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCreateMouseExited
        btnCreate.setBackground(new java.awt.Color(64, 43, 100));
    }//GEN-LAST:event_btnCreateMouseExited

    private void btnCreateMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCreateMousePressed
        // Access Create Billboards Page if users have "CB" permission
        if (this.permission.contains("CB")) {

            CreateBillboardsPage createBillboardsPage = new CreateBillboardsPage(token);
            createBillboardsPage.setVisible(true);
            this.setVisible(false);
        }
        else {
            JOptionPane.showMessageDialog(schedulePanel, "Do not have permission");
        }
    }//GEN-LAST:event_btnCreateMousePressed

    private void lbLogoutMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbLogoutMousePressed
        try{
            // Connect to server and send log out request
            ServerConnection svCon = new ServerConnection();
            svCon.sendRequest(new LogoutRequest());
            new LogIn().setVisible(true);
            this.dispose();
        } catch (ServerClosedException e) {
            JOptionPane.showMessageDialog(schedulePanel, e.getMessage());
            System.exit(0);
        }
    }//GEN-LAST:event_lbLogoutMousePressed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // Get schedule to delete
        String scheduleId = txtScheduleId.getText();
        boolean isOK = true;
        if (scheduleId.isEmpty()) {
            isOK = false;
        }

        if(isOK) {
            try {
                // Connect to the server
                ServerConnection svCon = new ServerConnection();
                DeleteScheduleRequest req = new DeleteScheduleRequest();
                req.setToken(this.token);
                req.setSchedule_id(scheduleId);
                svCon.sendRequest(req);
                //Get response from server
                DeleteScheduleResponse res = (DeleteScheduleResponse) Message.nextMessageFromSocket(svCon.getChannel(), svCon.getByteBuffer());
                if (res.isSuccessful()) {
                    JOptionPane.showMessageDialog(schedulePanel, "Delete schedule successful");
                    new ScheduleBillboardsPage(token).setVisible(true);
                    this.dispose();
                } else {
                    JOptionPane.showMessageDialog(schedulePanel, res.getMessage());
                    if(res.sessionExpired()){
                        System.exit(0);
                    }
                }
            } catch (IOException | ServerClosedException e) {
                JOptionPane.showMessageDialog(schedulePanel, e.getMessage());
                System.exit(0);
            }
        } else {
            JOptionPane.showMessageDialog(schedulePanel, "No schedule to remove");
        }

    }//GEN-LAST:event_btnDeleteActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JPanel btnCreate;
    private javax.swing.JButton btnDelete;
    private javax.swing.JPanel btnEdit;
    private javax.swing.JPanel btnHome;
    private javax.swing.JPanel btnList;
    private javax.swing.JPanel btnLogOut;
    private javax.swing.JButton btnSave;
    private javax.swing.JPanel btnSchedule;
    private javax.swing.JPanel inputPanel;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JLabel lbAppName;
    private javax.swing.JLabel lbAppNameLeft;
    private javax.swing.JLabel lbBackground;
    private javax.swing.JLabel lbBillboardId;
    private javax.swing.JLabel lbClose;
    private javax.swing.JLabel lbCreate;
    private javax.swing.JLabel lbDay1;
    private javax.swing.JLabel lbDay2;
    private javax.swing.JLabel lbDay3;
    private javax.swing.JLabel lbDay4;
    private javax.swing.JLabel lbDay5;
    private javax.swing.JLabel lbDay6;
    private javax.swing.JLabel lbDay7;
    private javax.swing.JLabel lbDay8;
    private javax.swing.JLabel lbEdit;
    private javax.swing.JLabel lbHome;
    private javax.swing.JLabel lbIconCreate;
    private javax.swing.JLabel lbIconEdit;
    private javax.swing.JLabel lbIconHome;
    private javax.swing.JLabel lbIconList;
    private javax.swing.JLabel lbIconLogout;
    private javax.swing.JLabel lbIconSchedule;
    private javax.swing.JLabel lbInputTitle;
    private javax.swing.JLabel lbIsScheduled;
    private javax.swing.JLabel lbList;
    private javax.swing.JLabel lbLogout;
    private javax.swing.JLabel lbMessage;
    private javax.swing.JLabel lbNextRun;
    private javax.swing.JLabel lbSchedule;
    private javax.swing.JLabel lbScheduleId;
    private javax.swing.JLabel lbScheduleId1;
    private javax.swing.JLabel lbScheduleId2;
    private javax.swing.JLabel lbScheduleId3;
    private javax.swing.JLabel lbScheduleId4;
    private javax.swing.JLabel lbScheduleId5;
    private javax.swing.JLabel lbScheduleId6;
    private javax.swing.JLabel lbScheduleId7;
    private javax.swing.JLabel lbStartTime;
    private javax.swing.JLabel lbTime1;
    private javax.swing.JLabel lbTime2;
    private javax.swing.JLabel lbTime3;
    private javax.swing.JLabel lbTime4;
    private javax.swing.JLabel lbTime5;
    private javax.swing.JLabel lbTime6;
    private javax.swing.JLabel lbTime7;
    private javax.swing.JLabel lbTimeLimit;
    private javax.swing.JLabel lbUserInfo;
    private javax.swing.JLabel lbWelcomeInfo;
    private javax.swing.JLabel lbWelcomeTitle;
    private javax.swing.JList<String> listDay1;
    private javax.swing.JList<String> listDay2;
    private javax.swing.JList<String> listDay3;
    private javax.swing.JList<String> listDay4;
    private javax.swing.JList<String> listDay5;
    private javax.swing.JList<String> listDay6;
    private javax.swing.JList<String> listDay7;
    private javax.swing.JList<String> listDay8;
    private javax.swing.JPanel scheduleListPanel;
    private javax.swing.JPanel schedulePanel;
    private javax.swing.JSeparator separator;
    private javax.swing.JPanel sidepanel;
    private javax.swing.JTextField txtBillboardId;
    private javax.swing.JTextField txtMessage;
    private javax.swing.JTextField txtNextRun;
    private javax.swing.JTextField txtScheduleId;
    private javax.swing.JTextField txtStartTime;
    private javax.swing.JTextField txtTimeLimit;
    private javax.swing.JPanel welcomePanel;
    // End of variables declaration//GEN-END:variables

    /**
     * Get selected value from JList and display in edit panel
     * @param list - JList component
     */
    private void getSelectedValue(JList list) {
        lbIsScheduled.setVisible(false);
        int index = list.getSelectedIndex();

        String str = (String) list.getSelectedValue();


        String[] elements = str.split("    ");
        String scheduleId = elements[2];
        
        for (Schedule s : listSchedule) {
            if (scheduleId.equals(Integer.toString(s.getScheduleId()))){
                txtScheduleId.setText(scheduleId);
                txtBillboardId.setText(Integer.toString(s.getBillboardId()));
                txtNextRun.setText(Integer.toString(s.getNextRun()));
                txtTimeLimit.setText(Integer.toString(s.getTimeLimit()));
                txtStartTime.setText(hourDateFormat.format(s.getStartTime()));

                int billboardId = s.getBillboardId();
                for (Billboard b: listBillboard) {
                    if (b.getBillboardId() == billboardId) {
                        txtMessage.setText(b.getMessage());
                    }
                }
            }
        }
        inputPanel.setVisible(true);
    }

    /**
     * Get selected billboard from JList
     * @param list - JList component
     */
    private void getSelectedBillboard(JList list) {
        txtBillboardId.setText("");
        txtMessage.setText("");
        txtNextRun.setText("");
        txtScheduleId.setText("");
        txtStartTime.setText("");
        txtTimeLimit.setText("");


        boolean isScheduled = false;
        int billboardId = (Integer) list.getSelectedValue();
        
        for (Schedule s : listSchedule) {
            if (billboardId == s.getBillboardId()){
                txtScheduleId.setText(Integer.toString(s.getScheduleId()));
                txtBillboardId.setText(Integer.toString(s.getBillboardId()));
                txtNextRun.setText(Integer.toString(s.getNextRun()));
                txtTimeLimit.setText(Integer.toString(s.getTimeLimit()));
                txtStartTime.setText(hourDateFormat.format(s.getStartTime()));

                for (Billboard b :listBillboard) {
                    if (b.getBillboardId() == billboardId){
                        txtMessage.setText(b.getMessage());
                        break;
                    }
                }

                isScheduled = true;
            }
        }

        if (!isScheduled) {
            lbIsScheduled.setVisible(true);
            for (Billboard b : listBillboard) {
                if (billboardId == b.getBillboardId()) {
                    txtBillboardId.setText(Integer.toString(b.getBillboardId()));
                    txtMessage.setText(b.getMessage());
                }
            }
        } else {
            lbIsScheduled.setVisible(false);
        }
        inputPanel.setVisible(true);
    }

    /**
     * Show the schedule to the table
     */
    private void showSchedule(){
        listSchedule = new DAO().processListSchedule(listSchedule);
        
        final SortedListModel scheduleModel1 = new SortedListModel();
        final SortedListModel scheduleModel2 = new SortedListModel();
        final SortedListModel scheduleModel3 = new SortedListModel();
        final SortedListModel scheduleModel4 = new SortedListModel();
        final SortedListModel scheduleModel5 = new SortedListModel();
        final SortedListModel scheduleModel6 = new SortedListModel();
        final SortedListModel scheduleModel7 = new SortedListModel();
        
        final SortedListModel billboardModel = new SortedListModel();
        
        for (Billboard b: listBillboard) {
            billboardModel.addElement(b.getBillboardId());
        }
        
        
        for (Schedule s : listSchedule) {
            ArrayList<Date> startRun = new ArrayList<Date>();                    
            startRun.addAll(s.getStartRun());
            ArrayList<Date> endRun = new ArrayList<Date>(); 
            endRun.addAll(s.getEndRun());

            for(int i = 0; i < startRun.size(); i++){
                if (dateFormat.format(startRun.get(i)).equals(lbDay1.getText())){                    
                    scheduleModel1.addElement(hourFormat.format(startRun.get(i)) + "-"+ hourFormat.format(endRun.get(i))+ "    |    " + s.getScheduleId());
                }
                    
                else if (dateFormat.format(startRun.get(i)).equals(lbDay2.getText())){                    
                    scheduleModel2.addElement(hourFormat.format(startRun.get(i)) + "-"+ hourFormat.format(endRun.get(i))+ "    |    " + s.getScheduleId());
                    
                    
                }else if (dateFormat.format(startRun.get(i)).equals(lbDay3.getText())){                    
                    scheduleModel3.addElement(hourFormat.format(startRun.get(i)) + "-"+ hourFormat.format(endRun.get(i))+ "    |    " + s.getScheduleId());
                    
                    
                }else if (dateFormat.format(startRun.get(i)).equals(lbDay4.getText())){                    
                    scheduleModel4.addElement(hourFormat.format(startRun.get(i)) + "-"+ hourFormat.format(endRun.get(i))+ "    |    " + s.getScheduleId());
                    
                    
                }else if (dateFormat.format(startRun.get(i)).equals(lbDay5.getText())){                    
                    scheduleModel5.addElement(hourFormat.format(startRun.get(i)) + "-"+ hourFormat.format(endRun.get(i))+ "    |    " + s.getScheduleId());
                    
                    
                }else if (dateFormat.format(startRun.get(i)).equals(lbDay6.getText())){                    
                    scheduleModel6.addElement(hourFormat.format(startRun.get(i)) + "-"+ hourFormat.format(endRun.get(i))+ "    |    " + s.getScheduleId());
                    
                    
                }else if (dateFormat.format(startRun.get(i)).equals(lbDay7.getText())){                    
                    scheduleModel7.addElement(hourFormat.format(startRun.get(i)) + "-"+ hourFormat.format(endRun.get(i))+ "    |    " + s.getScheduleId());
                    
                    
                }
            }
            
            
        }
        listDay1.setModel(scheduleModel1);
        listDay2.setModel(scheduleModel2);
        listDay3.setModel(scheduleModel3);
        listDay4.setModel(scheduleModel4);
        listDay5.setModel(scheduleModel5);
        listDay6.setModel(scheduleModel6);
        listDay7.setModel(scheduleModel7);        
        listDay8.setModel(billboardModel);
    }

}
