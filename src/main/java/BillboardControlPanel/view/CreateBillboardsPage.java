package BillboardControlPanel.view;


import BillboardControlPanel.billboardXML.ReadXmlFile;
import ServerConnection.Exceptions.ServerClosedException;
import ServerConnection.ServerConnection;
import BillboardControlPanel.controller.DAO;
import Commmunication.Message;
import Commmunication.Requests.CreateBillboardRequest;
import Commmunication.Requests.LogoutRequest;

import java.awt.*;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.*;
import BillboardControlPanel.billboardXML.WritingToXml;
import Commmunication.Response.CreateBillboardResponse;
import Utils.ColorHelper.ColorHelper;
import Utils.ImageFormatter.ImageFormatter;
import Utils.Token.Token;

import java.net.URL;
import java.nio.BufferOverflowException;
import java.util.Base64;

import javax.swing.filechooser.FileNameExtensionFilter;

/**
 * Create Billboards Page
 * @author Asus
 */
public class CreateBillboardsPage extends javax.swing.JFrame {

    /**
     * Creates new form CreateBillboardsPage
     */
    private String token;
    private String permission;
    private String userId;
    private String currentUser;
    private DAO helper;
    private Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
    public CreateBillboardsPage(String token) {
        
        this.token = token;
        String decodedToken = Token.decodeToken(this.token);
        //Get user information from decoded token
        this.permission = decodedToken.split("%%%%")[2];
        this.userId = decodedToken.split("%%%%")[0];
        this.currentUser = decodedToken.split("%%%%")[1];

        helper = new DAO();
        
        initComponents();
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        billboard_preview_frame.setVisible(false);

        //Set default color
        txtMsColor.setText("#000000");
        txtInfoColor.setText("#000000");
        txtBgColor.setText("#FFFFFF");




        // Can only select xml File for fileXmlChooser
        fileChooserPanel.setVisible(false);
        FileNameExtensionFilter xmlFilter = new FileNameExtensionFilter("xml files (*.xml)", "xml");
        fileXmlChooser.setFileFilter(xmlFilter);

        // Can only select bmp, jepg or png image for fileImageChooser
        FileNameExtensionFilter imageFilter = new FileNameExtensionFilter("Image files", "bmp", "jpeg", "png");
        fileImageChooser.setFileFilter(imageFilter);




    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        createBillboardsPanel = new javax.swing.JPanel();
        sidepanel = new javax.swing.JPanel();
        separator = new javax.swing.JSeparator();
        lbAppNameLeft = new javax.swing.JLabel();
        btnHome = new javax.swing.JPanel();
        lbIconHome = new javax.swing.JLabel();
        lbHome = new javax.swing.JLabel();
        btnCreate = new javax.swing.JPanel();
        lbIconCreate = new javax.swing.JLabel();
        lbCreate = new javax.swing.JLabel();
        btnList = new javax.swing.JPanel();
        lbIconList = new javax.swing.JLabel();
        lbList = new javax.swing.JLabel();
        btnSchedule = new javax.swing.JPanel();
        lbIconSchedule = new javax.swing.JLabel();
        lbSchedule = new javax.swing.JLabel();
        btnEdit = new javax.swing.JPanel();
        lbIconEdit = new javax.swing.JLabel();
        lbEdit = new javax.swing.JLabel();
        btnLogOut = new javax.swing.JPanel();
        lbIconLogout = new javax.swing.JLabel();
        lbLogout = new javax.swing.JLabel();
        createPanel = new javax.swing.JPanel();
        lbTitle = new javax.swing.JLabel();
        btnSubmit = new javax.swing.JButton();
        lbMessage = new javax.swing.JLabel();
        lbInfo = new javax.swing.JLabel();
        lbImage = new javax.swing.JLabel();
        txtImage = new javax.swing.JTextField();
        txtMessage = new javax.swing.JTextField();
        lbBgColor = new javax.swing.JLabel();
        txtBgColor = new javax.swing.JTextField();
        txtMsColor = new javax.swing.JTextField();
        lbFontColor = new javax.swing.JLabel();
        btnPreview = new javax.swing.JButton();
        textScrollPanel = new javax.swing.JScrollPane();
        txtInformation = new javax.swing.JTextArea();
        btnImport = new javax.swing.JButton();
        btnExport = new javax.swing.JButton();
        btnChooseBgColor = new javax.swing.JButton();
        btnChooseMessageColor = new javax.swing.JButton();
        btnChooseImage = new javax.swing.JButton();
        txtInfoColor = new javax.swing.JTextField();
        btnChooseInfoColor = new javax.swing.JButton();
        lbBgColor1 = new javax.swing.JLabel();
        billboard_preview_frame = new javax.swing.JInternalFrame();
        containerPanelM = new javax.swing.JPanel();
        lbMessageM = new javax.swing.JLabel();
        containerPanelMPI = new javax.swing.JPanel();
        lbPictureMPI = new javax.swing.JLabel();
        lbMessageMPI = new javax.swing.JLabel();
        lbInfoMPI = new javax.swing.JLabel();
        containerPanelI = new javax.swing.JPanel();
        lbInfoI = new javax.swing.JLabel();
        containerPanelMP = new javax.swing.JPanel();
        lbPictureMP = new javax.swing.JLabel();
        lbMessageMP = new javax.swing.JLabel();
        containerPanelMI = new javax.swing.JPanel();
        lbMessageMI = new javax.swing.JLabel();
        lbInfoMI = new javax.swing.JLabel();
        containerPanelPI = new javax.swing.JPanel();
        lbPicturePI = new javax.swing.JLabel();
        lbInfoPI = new javax.swing.JLabel();
        containerPanelP = new javax.swing.JPanel();
        lbPictureP = new javax.swing.JLabel();
        introPanel = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        lbBackground = new javax.swing.JLabel();
        fileChooserPanel = new javax.swing.JPanel();
        fileXmlChooser = new javax.swing.JFileChooser();
        fileImageChooser = new javax.swing.JFileChooser();
        welcomePanel = new javax.swing.JPanel();
        lbWelcomeTitle = new javax.swing.JLabel();
        lbWelcomeMessage = new javax.swing.JLabel();
        lbClose = new javax.swing.JLabel();
        lbAppName = new javax.swing.JLabel();
        lbUserInfo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setSize(new java.awt.Dimension(1920, 1080));

        createBillboardsPanel.setBackground(new java.awt.Color(255, 255, 255));
        createBillboardsPanel.setMinimumSize(new java.awt.Dimension(1920, 1080));
        createBillboardsPanel.setPreferredSize(new java.awt.Dimension(1920, 1080));
        createBillboardsPanel.setLayout(null);

        sidepanel.setBackground(new java.awt.Color(54, 33, 89));
        sidepanel.setPreferredSize(new Dimension(screenSize.width / 5, screenSize.height));
        sidepanel.setLayout(null);

        separator.setPreferredSize(new java.awt.Dimension(50, 5));
        sidepanel.add(separator);
        separator.setBounds(30, 90, 220, 10);

        lbAppNameLeft.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lbAppNameLeft.setForeground(new java.awt.Color(204, 204, 204));
        lbAppNameLeft.setText("BBCreator");
        sidepanel.add(lbAppNameLeft);
        lbAppNameLeft.setBounds(30, 50, 115, 32);

        btnHome.setBackground(new java.awt.Color(64, 43, 100));
        btnHome.setPreferredSize(new Dimension(screenSize.width / 5, 50) );
        btnHome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnHomeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnHomeMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnHomeMousePressed(evt);
            }
        });

        lbIconHome.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbIconHome.setIcon(new ImageIcon("src/main/java/BillboardControlPanel/view/images/icons8_home_15px_1.png"));
        lbIconHome.setToolTipText("");
        lbIconHome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnHomeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnHomeMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnHomeMousePressed(evt);
            }
        });

        lbHome.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbHome.setForeground(new java.awt.Color(204, 204, 204));
        lbHome.setText("Home");
        lbHome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnHomeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnHomeMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnHomeMousePressed(evt);
            }
        });

        javax.swing.GroupLayout btnHomeLayout = new javax.swing.GroupLayout(btnHome);
        btnHome.setLayout(btnHomeLayout);
        btnHomeLayout.setHorizontalGroup(
            btnHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnHomeLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(lbIconHome, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbHome)
                .addContainerGap(272, Short.MAX_VALUE))
        );
        btnHomeLayout.setVerticalGroup(
            btnHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnHomeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(btnHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lbHome)
                    .addComponent(lbIconHome, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        sidepanel.add(btnHome);
        btnHome.setBounds(0, 190, 384, 50);

        btnCreate.setBackground(new java.awt.Color(85, 65, 118));
        btnCreate.setPreferredSize(new Dimension(screenSize.width / 5, 50 ));

        lbIconCreate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbIconCreate.setIcon(new ImageIcon("src/main/java/BillboardControlPanel/view/images/icons8_create_15px.png") );

        lbCreate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbCreate.setForeground(new java.awt.Color(204, 204, 204));
        lbCreate.setText("Create Billboards");
        lbCreate.setToolTipText("");

        javax.swing.GroupLayout btnCreateLayout = new javax.swing.GroupLayout(btnCreate);
        btnCreate.setLayout(btnCreateLayout);
        btnCreateLayout.setHorizontalGroup(
            btnCreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnCreateLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(lbIconCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbCreate)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        btnCreateLayout.setVerticalGroup(
            btnCreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnCreateLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(btnCreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbIconCreate, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                    .addComponent(lbCreate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(12, 12, 12))
        );

        sidepanel.add(btnCreate);
        btnCreate.setBounds(0, 240, 384, 50);

        btnList.setBackground(new java.awt.Color(64, 43, 100));
        btnList.setPreferredSize(new Dimension(screenSize.width / 5, 50 ));
        btnList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnListlb_list_billboardsMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnListlb_list_billboardsMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lbListMousePressed(evt);
            }
        });

        lbIconList.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbIconList.setIcon(new ImageIcon("src/main/java/BillboardControlPanel/view/images/icons8_list_15px.png")  );
        lbIconList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lbIconListlb_list_billboardsMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lbIconListlb_list_billboardsMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lbListMousePressed(evt);
            }
        });

        lbList.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbList.setForeground(new java.awt.Color(204, 204, 204));
        lbList.setText("List Billboards");
        lbList.setToolTipText("");
        lbList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lbListMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lbListMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lbListMousePressed(evt);
            }
        });

        javax.swing.GroupLayout btnListLayout = new javax.swing.GroupLayout(btnList);
        btnList.setLayout(btnListLayout);
        btnListLayout.setHorizontalGroup(
            btnListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnListLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(lbIconList, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbList)
                .addContainerGap(223, Short.MAX_VALUE))
        );
        btnListLayout.setVerticalGroup(
            btnListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnListLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(btnListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbList, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                    .addComponent(lbIconList, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE))
                .addContainerGap())
        );

        sidepanel.add(btnList);
        btnList.setBounds(0, 290, 384, 50);

        btnSchedule.setBackground(new java.awt.Color(64, 43, 100));
        btnSchedule.setPreferredSize(new Dimension(screenSize.width / 5, 50 ));
        btnSchedule.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnSchedulelb_schedule_billboardsMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnSchedulelb_schedule_billboardsMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lbIconScheduleMousePressed(evt);
            }
        });

        lbIconSchedule.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbIconSchedule.setIcon(new javax.swing.ImageIcon("src/main/java/BillboardControlPanel/view/images/icons8_schedule_15px_1.png")); // NOI18N
        lbIconSchedule.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lbIconSchedulelb_schedule_billboardsMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lbIconSchedulelb_schedule_billboardsMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lbIconScheduleMousePressed(evt);
            }
        });

        lbSchedule.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbSchedule.setForeground(new java.awt.Color(204, 204, 204));
        lbSchedule.setText("Schedule Billboards");
        lbSchedule.setToolTipText("");
        lbSchedule.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lbScheduleMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lbScheduleMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lbIconScheduleMousePressed(evt);
            }
        });

        javax.swing.GroupLayout btnScheduleLayout = new javax.swing.GroupLayout(btnSchedule);
        btnSchedule.setLayout(btnScheduleLayout);
        btnScheduleLayout.setHorizontalGroup(
            btnScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnScheduleLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(lbIconSchedule, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbSchedule)
                .addContainerGap(185, Short.MAX_VALUE))
        );
        btnScheduleLayout.setVerticalGroup(
            btnScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnScheduleLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(btnScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lbSchedule, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                    .addComponent(lbIconSchedule, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        sidepanel.add(btnSchedule);
        btnSchedule.setBounds(0, 340, 384, 50);

        btnEdit.setBackground(new java.awt.Color(64, 43, 100));
        btnEdit.setPreferredSize(new Dimension(screenSize.width / 5, 50 ));
        btnEdit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnEditjLabel16MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnEditjLabel16MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lbEditMousePressed(evt);
            }
        });

        lbIconEdit.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbIconEdit.setIcon(new javax.swing.ImageIcon("src/main/java/BillboardControlPanel/view/images/icons8_edit_profile_15px_1.png")); // NOI18N
        lbIconEdit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lbIconEditMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lbIconEditMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lbEditMousePressed(evt);
            }
        });

        lbEdit.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbEdit.setForeground(new java.awt.Color(204, 204, 204));
        lbEdit.setText("Edit Users");
        lbEdit.setToolTipText("");
        lbEdit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lbEditjLabel16MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lbEditjLabel16MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lbEditMousePressed(evt);
            }
        });

        javax.swing.GroupLayout btnEditLayout = new javax.swing.GroupLayout(btnEdit);
        btnEdit.setLayout(btnEditLayout);
        btnEditLayout.setHorizontalGroup(
            btnEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnEditLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(lbIconEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbEdit)
                .addContainerGap(252, Short.MAX_VALUE))
        );
        btnEditLayout.setVerticalGroup(
            btnEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, btnEditLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(btnEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbIconEdit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbEdit, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE))
                .addContainerGap())
        );

        sidepanel.add(btnEdit);
        btnEdit.setBounds(0, 390, 384, 50);

        btnLogOut.setBackground(new java.awt.Color(64, 43, 100));
        btnLogOut.setPreferredSize(new Dimension(screenSize.width / 5, 50 ));
        btnLogOut.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnLogOutMousePressed(evt);
            }
        });

        lbIconLogout.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbIconLogout.setIcon(new javax.swing.ImageIcon("src/main/java/BillboardControlPanel/view/images/icons8_logout_rounded_left_15px.png")); // NOI18N
        lbIconLogout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnLogOutMousePressed(evt);
            }
        });

        lbLogout.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbLogout.setForeground(new java.awt.Color(204, 204, 204));
        lbLogout.setText("Log Out");
        lbLogout.setToolTipText("");
        lbLogout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnLogOutMousePressed(evt);
            }
        });

        javax.swing.GroupLayout btnLogOutLayout = new javax.swing.GroupLayout(btnLogOut);
        btnLogOut.setLayout(btnLogOutLayout);
        btnLogOutLayout.setHorizontalGroup(
            btnLogOutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnLogOutLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(lbIconLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbLogout)
                .addContainerGap(264, Short.MAX_VALUE))
        );
        btnLogOutLayout.setVerticalGroup(
            btnLogOutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, btnLogOutLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(btnLogOutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbIconLogout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbLogout, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE))
                .addContainerGap())
        );

        sidepanel.add(btnLogOut);
        btnLogOut.setBounds(0, 950, 384, 60);

        createBillboardsPanel.add(sidepanel);
        sidepanel.setBounds(0, 0, 384, 1080);

        createPanel.setBackground(new java.awt.Color(250, 250, 250));
        createPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204)));

        lbTitle.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lbTitle.setForeground(new java.awt.Color(90, 148, 210));
        lbTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbTitle.setText("Tell us about your billboard");

        btnSubmit.setBackground(new java.awt.Color(90, 148, 210));
        btnSubmit.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnSubmit.setForeground(new java.awt.Color(255, 255, 255));
        btnSubmit.setText("Submit");
        btnSubmit.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnSubmit.setBorderPainted(false);
        btnSubmit.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        lbMessage.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbMessage.setForeground(new java.awt.Color(90, 148, 210));
        lbMessage.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbMessage.setText("Name your billboard");

        lbInfo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbInfo.setForeground(new java.awt.Color(90, 148, 210));
        lbInfo.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbInfo.setText("Describe your billboard");

        lbImage.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbImage.setForeground(new java.awt.Color(90, 148, 210));
        lbImage.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbImage.setText("Add inspiration image (Choose your image or add URL)");

        txtImage.setBackground(new java.awt.Color(250, 250, 250));
        txtImage.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtImage.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(12, 91, 160)));
        txtImage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtImageMouseClicked(evt);
            }
        });

        txtMessage.setBackground(new java.awt.Color(250, 250, 250));
        txtMessage.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtMessage.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(12, 91, 160)));

        lbBgColor.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbBgColor.setForeground(new java.awt.Color(90, 148, 210));
        lbBgColor.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbBgColor.setText("Choose background color");

        txtBgColor.setBackground(new java.awt.Color(250, 250, 250));
        txtBgColor.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtBgColor.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(12, 91, 160)));

        txtMsColor.setBackground(new java.awt.Color(250, 250, 250));
        txtMsColor.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtMsColor.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(12, 91, 160)));

        lbFontColor.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbFontColor.setForeground(new java.awt.Color(90, 148, 210));
        lbFontColor.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbFontColor.setText("Choose message color");

        btnPreview.setBackground(new java.awt.Color(90, 148, 210));
        btnPreview.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnPreview.setForeground(new java.awt.Color(255, 255, 255));
        btnPreview.setText("Preview");
        btnPreview.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnPreview.setBorderPainted(false);
        btnPreview.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnPreview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreviewActionPerformed(evt);
            }
        });

        txtInformation.setColumns(20);
        txtInformation.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtInformation.setLineWrap(true);
        txtInformation.setRows(5);
        txtInformation.setWrapStyleWord(true);
        txtInformation.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(12, 91, 160)));
        textScrollPanel.setViewportView(txtInformation);

        btnImport.setBackground(new java.awt.Color(90, 148, 210));
        btnImport.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnImport.setForeground(new java.awt.Color(255, 255, 255));
        btnImport.setText("Import");
        btnImport.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnImport.setBorderPainted(false);
        btnImport.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportActionPerformed(evt);
            }
        });

        btnExport.setBackground(new java.awt.Color(90, 148, 210));
        btnExport.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnExport.setForeground(new java.awt.Color(255, 255, 255));
        btnExport.setText("Export");
        btnExport.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnExport.setBorderPainted(false);
        btnExport.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportActionPerformed(evt);
            }
        });

        btnChooseBgColor.setBackground(new java.awt.Color(90, 148, 210));
        btnChooseBgColor.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnChooseBgColor.setForeground(new java.awt.Color(255, 255, 255));
        btnChooseBgColor.setText("Choose color");
        btnChooseBgColor.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnChooseBgColor.setBorderPainted(false);
        btnChooseBgColor.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnChooseBgColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChooseBgColorActionPerformed(evt);
            }
        });

        btnChooseMessageColor.setBackground(new java.awt.Color(90, 148, 210));
        btnChooseMessageColor.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnChooseMessageColor.setForeground(new java.awt.Color(255, 255, 255));
        btnChooseMessageColor.setText("Choose color");
        btnChooseMessageColor.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnChooseMessageColor.setBorderPainted(false);
        btnChooseMessageColor.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnChooseMessageColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChooseMessageColorActionPerformed(evt);
            }
        });

        btnChooseImage.setBackground(new java.awt.Color(90, 148, 210));
        btnChooseImage.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnChooseImage.setForeground(new java.awt.Color(255, 255, 255));
        btnChooseImage.setText("Choose image");
        btnChooseImage.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnChooseImage.setBorderPainted(false);
        btnChooseImage.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnChooseImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChooseImageActionPerformed(evt);
            }
        });

        txtInfoColor.setBackground(new java.awt.Color(250, 250, 250));
        txtInfoColor.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtInfoColor.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(12, 91, 160)));

        btnChooseInfoColor.setBackground(new java.awt.Color(90, 148, 210));
        btnChooseInfoColor.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnChooseInfoColor.setForeground(new java.awt.Color(255, 255, 255));
        btnChooseInfoColor.setText("Choose color");
        btnChooseInfoColor.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnChooseInfoColor.setBorderPainted(false);
        btnChooseInfoColor.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnChooseInfoColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChooseInfoColorActionPerformed(evt);
            }
        });

        lbBgColor1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbBgColor1.setForeground(new java.awt.Color(90, 148, 210));
        lbBgColor1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbBgColor1.setText("Choose information color");

        javax.swing.GroupLayout createPanelLayout = new javax.swing.GroupLayout(createPanel);
        createPanel.setLayout(createPanelLayout);
        createPanelLayout.setHorizontalGroup(
            createPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, createPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53))
            .addGroup(createPanelLayout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addGroup(createPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(createPanelLayout.createSequentialGroup()
                        .addComponent(lbBgColor1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(createPanelLayout.createSequentialGroup()
                        .addComponent(textScrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(createPanelLayout.createSequentialGroup()
                        .addGroup(createPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(createPanelLayout.createSequentialGroup()
                                .addGroup(createPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(createPanelLayout.createSequentialGroup()
                                        .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnPreview, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, createPanelLayout.createSequentialGroup()
                                        .addComponent(btnImport, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnExport, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(createPanelLayout.createSequentialGroup()
                                        .addComponent(txtInfoColor, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(15, 15, 15)
                                        .addComponent(btnChooseInfoColor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGap(2, 2, 2))
                            .addGroup(createPanelLayout.createSequentialGroup()
                                .addGroup(createPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtMessage, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbInfo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbMessage, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbBgColor, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(createPanelLayout.createSequentialGroup()
                                        .addGroup(createPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(createPanelLayout.createSequentialGroup()
                                                .addGroup(createPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addGroup(createPanelLayout.createSequentialGroup()
                                                        .addComponent(lbFontColor, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(94, 94, 94))
                                                    .addGroup(createPanelLayout.createSequentialGroup()
                                                        .addComponent(txtBgColor)
                                                        .addGap(19, 19, 19)))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addGroup(createPanelLayout.createSequentialGroup()
                                                .addComponent(txtMsColor)
                                                .addGap(15, 15, 15)))
                                        .addGroup(createPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(btnChooseBgColor, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)
                                            .addComponent(btnChooseMessageColor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addComponent(lbImage, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, createPanelLayout.createSequentialGroup()
                                        .addComponent(txtImage, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnChooseImage, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)))
                                .addGap(0, 2, Short.MAX_VALUE)))
                        .addGap(59, 59, 59))))
        );
        createPanelLayout.setVerticalGroup(
            createPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createPanelLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(lbTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lbMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lbInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(textScrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lbImage, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(createPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtImage, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnChooseImage, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(lbBgColor, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(createPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBgColor, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnChooseBgColor, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(lbFontColor, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(createPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMsColor, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnChooseMessageColor, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(lbBgColor1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(createPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtInfoColor, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnChooseInfoColor, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(createPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPreview, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(createPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnImport, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExport, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        createBillboardsPanel.add(createPanel);
        createPanel.setBounds(1340, 310, 470, 750);

        billboard_preview_frame.setClosable(true);
        billboard_preview_frame.setNormalBounds(new java.awt.Rectangle(0, 0, 0, 0));
        billboard_preview_frame.setVisible(true);

        containerPanelM.setBackground(new java.awt.Color(153, 255, 51));
        containerPanelM.setPreferredSize(new java.awt.Dimension(750, 450));

        lbMessageM.setFont(new java.awt.Font("MV Boli", 0, 36)); // NOI18N
        lbMessageM.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbMessageM.setToolTipText("");
        lbMessageM.setPreferredSize(new java.awt.Dimension(480, 420));
        lbMessageM.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        javax.swing.GroupLayout containerPanelMLayout = new javax.swing.GroupLayout(containerPanelM);
        containerPanelM.setLayout(containerPanelMLayout);
        containerPanelMLayout.setHorizontalGroup(
            containerPanelMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, containerPanelMLayout.createSequentialGroup()
                .addContainerGap(135, Short.MAX_VALUE)
                .addComponent(lbMessageM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(135, 135, 135))
        );
        containerPanelMLayout.setVerticalGroup(
            containerPanelMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(containerPanelMLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbMessageM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        containerPanelMPI.setBackground(new java.awt.Color(153, 255, 51));
        containerPanelMPI.setPreferredSize(new java.awt.Dimension(750, 450));

        lbPictureMPI.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbPictureMPI.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lbPictureMPI.setMaximumSize(new java.awt.Dimension(960, 540));
        lbPictureMPI.setMinimumSize(new java.awt.Dimension(960, 540));
        lbPictureMPI.setPreferredSize(new java.awt.Dimension(480, 140));

        lbMessageMPI.setFont(new java.awt.Font("MV Boli", 0, 36)); // NOI18N
        lbMessageMPI.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbMessageMPI.setToolTipText("");
        lbMessageMPI.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        lbMessageMPI.setPreferredSize(new java.awt.Dimension(480, 140));
        lbMessageMPI.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        lbInfoMPI.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbInfoMPI.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbInfoMPI.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        lbInfoMPI.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lbInfoMPI.setPreferredSize(new java.awt.Dimension(480, 140));

        javax.swing.GroupLayout containerPanelMPILayout = new javax.swing.GroupLayout(containerPanelMPI);
        containerPanelMPI.setLayout(containerPanelMPILayout);
        containerPanelMPILayout.setHorizontalGroup(
            containerPanelMPILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, containerPanelMPILayout.createSequentialGroup()
                .addGap(0, 135, Short.MAX_VALUE)
                .addGroup(containerPanelMPILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbInfoMPI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbPictureMPI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbMessageMPI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(135, 135, 135))
        );
        containerPanelMPILayout.setVerticalGroup(
            containerPanelMPILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(containerPanelMPILayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbMessageMPI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbPictureMPI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addComponent(lbInfoMPI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        containerPanelI.setBackground(new java.awt.Color(153, 255, 51));
        containerPanelI.setPreferredSize(new java.awt.Dimension(750, 450));

        lbInfoI.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lbInfoI.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbInfoI.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        lbInfoI.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lbInfoI.setPreferredSize(new java.awt.Dimension(480, 280));

        javax.swing.GroupLayout containerPanelILayout = new javax.swing.GroupLayout(containerPanelI);
        containerPanelI.setLayout(containerPanelILayout);
        containerPanelILayout.setHorizontalGroup(
            containerPanelILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, containerPanelILayout.createSequentialGroup()
                .addContainerGap(135, Short.MAX_VALUE)
                .addComponent(lbInfoI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(135, 135, 135))
        );
        containerPanelILayout.setVerticalGroup(
            containerPanelILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(containerPanelILayout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(lbInfoI, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(64, Short.MAX_VALUE))
        );

        containerPanelMP.setBackground(new java.awt.Color(153, 255, 51));
        containerPanelMP.setPreferredSize(new java.awt.Dimension(750, 450));

        lbPictureMP.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbPictureMP.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lbPictureMP.setMaximumSize(new java.awt.Dimension(960, 540));
        lbPictureMP.setMinimumSize(new java.awt.Dimension(960, 540));
        lbPictureMP.setPreferredSize(new java.awt.Dimension(480, 270));

        lbMessageMP.setFont(new java.awt.Font("MV Boli", 0, 36)); // NOI18N
        lbMessageMP.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbMessageMP.setToolTipText("");
        lbMessageMP.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        lbMessageMP.setPreferredSize(new java.awt.Dimension(480, 140));
        lbMessageMP.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        javax.swing.GroupLayout containerPanelMPLayout = new javax.swing.GroupLayout(containerPanelMP);
        containerPanelMP.setLayout(containerPanelMPLayout);
        containerPanelMPLayout.setHorizontalGroup(
            containerPanelMPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, containerPanelMPLayout.createSequentialGroup()
                .addContainerGap(135, Short.MAX_VALUE)
                .addGroup(containerPanelMPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbMessageMP, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbPictureMP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(135, 135, 135))
        );
        containerPanelMPLayout.setVerticalGroup(
            containerPanelMPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(containerPanelMPLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(lbMessageMP, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbPictureMP, javax.swing.GroupLayout.PREFERRED_SIZE, 277, Short.MAX_VALUE)
                .addGap(16, 16, 16))
        );

        containerPanelMI.setBackground(new java.awt.Color(153, 255, 51));
        containerPanelMI.setPreferredSize(new java.awt.Dimension(750, 450));

        lbMessageMI.setFont(new java.awt.Font("MV Boli", 0, 36)); // NOI18N
        lbMessageMI.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbMessageMI.setToolTipText("");
        lbMessageMI.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        lbMessageMI.setPreferredSize(new java.awt.Dimension(480, 210));
        lbMessageMI.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        lbInfoMI.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbInfoMI.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbInfoMI.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        lbInfoMI.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lbInfoMI.setPreferredSize(new java.awt.Dimension(480, 210));

        javax.swing.GroupLayout containerPanelMILayout = new javax.swing.GroupLayout(containerPanelMI);
        containerPanelMI.setLayout(containerPanelMILayout);
        containerPanelMILayout.setHorizontalGroup(
            containerPanelMILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(containerPanelMILayout.createSequentialGroup()
                .addGap(135, 135, 135)
                .addComponent(lbInfoMI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(135, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, containerPanelMILayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbMessageMI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(127, 127, 127))
        );
        containerPanelMILayout.setVerticalGroup(
            containerPanelMILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(containerPanelMILayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbMessageMI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbInfoMI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        containerPanelPI.setBackground(new java.awt.Color(153, 255, 51));
        containerPanelPI.setPreferredSize(new java.awt.Dimension(750, 450));

        lbPicturePI.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbPicturePI.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lbPicturePI.setMaximumSize(new java.awt.Dimension(960, 540));
        lbPicturePI.setMinimumSize(new java.awt.Dimension(960, 540));
        lbPicturePI.setPreferredSize(new java.awt.Dimension(480, 270));

        lbInfoPI.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbInfoPI.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbInfoPI.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        lbInfoPI.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lbInfoPI.setPreferredSize(new java.awt.Dimension(480, 140));

        javax.swing.GroupLayout containerPanelPILayout = new javax.swing.GroupLayout(containerPanelPI);
        containerPanelPI.setLayout(containerPanelPILayout);
        containerPanelPILayout.setHorizontalGroup(
            containerPanelPILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(containerPanelPILayout.createSequentialGroup()
                .addGap(135, 135, 135)
                .addGroup(containerPanelPILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbInfoPI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbPicturePI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(135, Short.MAX_VALUE))
        );
        containerPanelPILayout.setVerticalGroup(
            containerPanelPILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(containerPanelPILayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbPicturePI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbInfoPI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        containerPanelP.setBackground(new java.awt.Color(153, 255, 51));
        containerPanelP.setPreferredSize(new java.awt.Dimension(750, 450));

        lbPictureP.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbPictureP.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lbPictureP.setMaximumSize(new java.awt.Dimension(960, 540));
        lbPictureP.setMinimumSize(new java.awt.Dimension(960, 540));
        lbPictureP.setPreferredSize(new java.awt.Dimension(480, 285));

        javax.swing.GroupLayout containerPanelPLayout = new javax.swing.GroupLayout(containerPanelP);
        containerPanelP.setLayout(containerPanelPLayout);
        containerPanelPLayout.setHorizontalGroup(
            containerPanelPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(containerPanelPLayout.createSequentialGroup()
                .addGap(133, 133, 133)
                .addComponent(lbPictureP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(137, Short.MAX_VALUE))
        );
        containerPanelPLayout.setVerticalGroup(
            containerPanelPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(containerPanelPLayout.createSequentialGroup()
                .addGap(82, 82, 82)
                .addComponent(lbPictureP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(83, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout billboard_preview_frameLayout = new javax.swing.GroupLayout(billboard_preview_frame.getContentPane());
        billboard_preview_frame.getContentPane().setLayout(billboard_preview_frameLayout);
        billboard_preview_frameLayout.setHorizontalGroup(
            billboard_preview_frameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 750, Short.MAX_VALUE)
            .addGroup(billboard_preview_frameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(billboard_preview_frameLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(containerPanelM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(billboard_preview_frameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(billboard_preview_frameLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(containerPanelMPI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(billboard_preview_frameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(billboard_preview_frameLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(containerPanelI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(billboard_preview_frameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(billboard_preview_frameLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(containerPanelMP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(billboard_preview_frameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(billboard_preview_frameLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(containerPanelMI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(billboard_preview_frameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(billboard_preview_frameLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(containerPanelPI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(billboard_preview_frameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(billboard_preview_frameLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(containerPanelP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        billboard_preview_frameLayout.setVerticalGroup(
            billboard_preview_frameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 464, Short.MAX_VALUE)
            .addGroup(billboard_preview_frameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(billboard_preview_frameLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(containerPanelM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(billboard_preview_frameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(billboard_preview_frameLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(containerPanelMPI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(billboard_preview_frameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(billboard_preview_frameLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(containerPanelI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(billboard_preview_frameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(billboard_preview_frameLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(containerPanelMP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(billboard_preview_frameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(billboard_preview_frameLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(containerPanelMI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(billboard_preview_frameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(billboard_preview_frameLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(containerPanelPI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(billboard_preview_frameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(billboard_preview_frameLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(containerPanelP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        createBillboardsPanel.add(billboard_preview_frame);
        billboard_preview_frame.setBounds(540, 580, 750, 490);

        introPanel.setBackground(new java.awt.Color(255, 255, 255));

        jLabel19.setBackground(new java.awt.Color(90, 148, 210));
        jLabel19.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel19.setText("THE #1 BILLBOARD GENERATOR  ");

        jLabel20.setBackground(new java.awt.Color(51, 51, 51));
        jLabel20.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel20.setText("<html>Get the perfect billboard design!<br>Whatever your need,<br>we’ll help get it done.");
        jLabel20.setToolTipText("");
        jLabel20.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        javax.swing.GroupLayout introPanelLayout = new javax.swing.GroupLayout(introPanel);
        introPanel.setLayout(introPanelLayout);
        introPanelLayout.setHorizontalGroup(
            introPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(introPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(introPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel19)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        introPanelLayout.setVerticalGroup(
            introPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, introPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(106, 106, 106))
        );

        createBillboardsPanel.add(introPanel);
        introPanel.setBounds(570, 350, 560, 180);

        lbBackground.setBackground(new java.awt.Color(245, 245, 245));
        lbBackground.setIcon(new javax.swing.ImageIcon("src/main/java/BillboardControlPanel/view/images/bg_blue.png")); // NOI18N
        createBillboardsPanel.add(lbBackground);
        lbBackground.setBounds(384, 250, 1536, 830);

        javax.swing.GroupLayout fileChooserPanelLayout = new javax.swing.GroupLayout(fileChooserPanel);
        fileChooserPanel.setLayout(fileChooserPanelLayout);
        fileChooserPanelLayout.setHorizontalGroup(
            fileChooserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fileChooserPanelLayout.createSequentialGroup()
                .addComponent(fileXmlChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addGap(984, 984, 984))
            .addGroup(fileChooserPanelLayout.createSequentialGroup()
                .addGap(850, 850, 850)
                .addComponent(fileImageChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        fileChooserPanelLayout.setVerticalGroup(
            fileChooserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fileChooserPanelLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(fileImageChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(293, 293, 293)
                .addComponent(fileXmlChooser, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE))
        );

        createBillboardsPanel.add(fileChooserPanel);
        fileChooserPanel.setBounds(470, 540, 780, 480);

        welcomePanel.setBackground(new java.awt.Color(110, 89, 222));
        welcomePanel.setPreferredSize(new Dimension(screenSize.width / 5 * 4, 150 ));

        lbWelcomeTitle.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lbWelcomeTitle.setForeground(new java.awt.Color(204, 204, 204));
        lbWelcomeTitle.setText("Create Billboards");

        lbWelcomeMessage.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        lbWelcomeMessage.setForeground(new java.awt.Color(204, 204, 204));
        lbWelcomeMessage.setText("Building the stunning billboards just by few steps.");
        lbWelcomeMessage.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        javax.swing.GroupLayout welcomePanelLayout = new javax.swing.GroupLayout(welcomePanel);
        welcomePanel.setLayout(welcomePanelLayout);
        welcomePanelLayout.setHorizontalGroup(
            welcomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(welcomePanelLayout.createSequentialGroup()
                .addGap(94, 94, 94)
                .addGroup(welcomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbWelcomeMessage)
                    .addComponent(lbWelcomeTitle))
                .addContainerGap(731, Short.MAX_VALUE))
        );
        welcomePanelLayout.setVerticalGroup(
            welcomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, welcomePanelLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(lbWelcomeTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbWelcomeMessage)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        createBillboardsPanel.add(welcomePanel);
        welcomePanel.setBounds(384, 90, 1610, 160);

        lbClose.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lbClose.setForeground(new java.awt.Color(54, 33, 89));
        lbClose.setText("X");
        lbClose.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lbClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lbCloseMousePressed(evt);
            }
        });
        createBillboardsPanel.add(lbClose);
        lbClose.setBounds(1880, 10, 16, 32);

        lbAppName.setBackground(new java.awt.Color(51, 51, 51));
        lbAppName.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lbAppName.setText("We ♥ BBCreator");
        createBillboardsPanel.add(lbAppName);
        lbAppName.setBounds(470, 20, 137, 25);

        lbUserInfo.setBackground(new java.awt.Color(51, 51, 51));
        lbUserInfo.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        lbUserInfo.setText("Username: " + currentUser + "  ID: " + userId );
        createBillboardsPanel.add(lbUserInfo);
        lbUserInfo.setBounds(1600, 15, 220, 22);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(createBillboardsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(createBillboardsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lbCloseMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbCloseMousePressed
        System.exit(0);
    }//GEN-LAST:event_lbCloseMousePressed

    private void lbIconListlb_list_billboardsMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbIconListlb_list_billboardsMouseEntered
        btnList.setBackground(new java.awt.Color(85,65,118));
    }//GEN-LAST:event_lbIconListlb_list_billboardsMouseEntered

    private void lbIconListlb_list_billboardsMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbIconListlb_list_billboardsMouseExited
        btnList.setBackground(new java.awt.Color(64, 43, 100));
    }//GEN-LAST:event_lbIconListlb_list_billboardsMouseExited

    private void lbListMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbListMouseEntered
        btnList.setBackground(new java.awt.Color(85,65,118));
    }//GEN-LAST:event_lbListMouseEntered

    private void lbListMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbListMouseExited
        btnList.setBackground(new java.awt.Color(64, 43, 100));
    }//GEN-LAST:event_lbListMouseExited

    private void btnListlb_list_billboardsMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnListlb_list_billboardsMouseEntered
        btnList.setBackground(new java.awt.Color(85,65,118));
    }//GEN-LAST:event_btnListlb_list_billboardsMouseEntered

    private void btnListlb_list_billboardsMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnListlb_list_billboardsMouseExited
        btnList.setBackground(new java.awt.Color(64, 43, 100));
    }//GEN-LAST:event_btnListlb_list_billboardsMouseExited

    private void lbIconSchedulelb_schedule_billboardsMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbIconSchedulelb_schedule_billboardsMouseEntered
        btnSchedule.setBackground(new java.awt.Color(85,65,118));
    }//GEN-LAST:event_lbIconSchedulelb_schedule_billboardsMouseEntered

    private void lbIconSchedulelb_schedule_billboardsMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbIconSchedulelb_schedule_billboardsMouseExited
        btnSchedule.setBackground(new java.awt.Color(64, 43, 100));
    }//GEN-LAST:event_lbIconSchedulelb_schedule_billboardsMouseExited

    private void lbScheduleMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbScheduleMouseEntered
        btnSchedule.setBackground(new java.awt.Color(85,65,118));
    }//GEN-LAST:event_lbScheduleMouseEntered

    private void lbScheduleMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbScheduleMouseExited
        btnSchedule.setBackground(new java.awt.Color(64, 43, 100));
    }//GEN-LAST:event_lbScheduleMouseExited

    private void btnSchedulelb_schedule_billboardsMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSchedulelb_schedule_billboardsMouseEntered
        btnSchedule.setBackground(new java.awt.Color(85,65,118));
    }//GEN-LAST:event_btnSchedulelb_schedule_billboardsMouseEntered

    private void btnSchedulelb_schedule_billboardsMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSchedulelb_schedule_billboardsMouseExited
        btnSchedule.setBackground(new java.awt.Color(64, 43, 100));
    }//GEN-LAST:event_btnSchedulelb_schedule_billboardsMouseExited

    private void lbIconEditMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbIconEditMouseEntered
        btnEdit.setBackground(new java.awt.Color(85,65,118));
    }//GEN-LAST:event_lbIconEditMouseEntered

    private void lbIconEditMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbIconEditMouseExited
        btnEdit.setBackground(new java.awt.Color(64, 43, 100));
    }//GEN-LAST:event_lbIconEditMouseExited

    private void lbEditjLabel16MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbEditjLabel16MouseEntered
        btnEdit.setBackground(new java.awt.Color(85,65,118));
    }//GEN-LAST:event_lbEditjLabel16MouseEntered

    private void lbEditjLabel16MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbEditjLabel16MouseExited
        btnEdit.setBackground(new java.awt.Color(64, 43, 100));
    }//GEN-LAST:event_lbEditjLabel16MouseExited

    private void btnEditjLabel16MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditjLabel16MouseEntered
        btnEdit.setBackground(new java.awt.Color(85,65,118));
    }//GEN-LAST:event_btnEditjLabel16MouseEntered

    private void btnEditjLabel16MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditjLabel16MouseExited
        btnEdit.setBackground(new java.awt.Color(64, 43, 100));
    }//GEN-LAST:event_btnEditjLabel16MouseExited

    private void btnHomeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnHomeMouseEntered
        btnHome.setBackground(new java.awt.Color(85,65,118));
    }//GEN-LAST:event_btnHomeMouseEntered

    private void btnHomeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnHomeMouseExited
        btnHome.setBackground(new java.awt.Color(64, 43, 100));
    }//GEN-LAST:event_btnHomeMouseExited

    private void btnHomeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnHomeMousePressed
        setVisible(false);
        new Home(token).setVisible(true);
    }//GEN-LAST:event_btnHomeMousePressed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        String message, information, backgroundColor, msColor, infoColor, picture;
        boolean isOk = true, isNotOverflowed = true, isValidInfo = true, isValidImage = true, isValidColor = true;

        message = txtMessage.getText();
        information = txtInformation.getText();
        backgroundColor = txtBgColor.getText();
        msColor = txtMsColor.getText();
        picture = txtImage.getText();
        infoColor = txtInfoColor.getText();


        // Check if all input fields are valid
        if (message.isEmpty() && information.isEmpty() && picture.isEmpty()) {
            isOk = false;
            isValidInfo = false;
        }
        if (backgroundColor.isEmpty() || msColor.isEmpty() || infoColor.isEmpty()) {
            isOk = false;
            isValidInfo = false;
        } else {
            if (!ColorHelper.isHexString(backgroundColor) || !ColorHelper.isHexString(msColor) || !ColorHelper.isHexString(infoColor)){
                isOk = false;
                isValidColor = false;
            }
        }

        if (message.isEmpty()) {
            message = null;
        }
        if (information.isEmpty()) {
            information = null;
        }

        if (picture.isEmpty()){
            picture = null;
        } else {


            if (!picture.startsWith("http://") && !picture.startsWith("https://")) {
                if (!ImageFormatter.isBase64String(picture)) {
                    picture = ImageFormatter.pathToData(picture);
                    if (picture == null) {
                        isOk = false;
                        isValidImage = false;
                    }
                }

            }
        }

        // If all input fields are valid, connect to server and get response
        if(isOk) {

            try {
                //Establish connection to server
                ServerConnection svCon = new ServerConnection();
                CreateBillboardRequest req = new CreateBillboardRequest();
                req.setToken(this.token);
                req.setUserId(this.userId);
                req.setMessage(message);
                req.setInformation(information);
                req.setBackgroundColor(backgroundColor);
                req.setMessageColor(msColor);
                req.setPicture(picture);
                req.setInfoColor(infoColor);
                try{
                    svCon.sendRequest(req);
                }catch(BufferOverflowException e){
                    isNotOverflowed = false;
                    JOptionPane.showMessageDialog(createBillboardsPanel, "The image is too big to upload");
                }

                // Get response from server
                CreateBillboardResponse res = (CreateBillboardResponse) Message.nextMessageFromSocket(svCon.getChannel(), svCon.getByteBuffer());
                System.out.println(res.getMessage());
                if (res.isSuccessful()) {
                    JOptionPane.showMessageDialog(createBillboardsPanel, "Add successfully");
                    new CreateBillboardsPage(token).setVisible(true);
                    this.dispose();

                } else {
                    JOptionPane.showMessageDialog(createBillboardsPanel, res.getMessage());
                    if(res.sessionExpired()){
                        System.exit(0);
                    }
                }

            } catch (IOException | ServerClosedException e) {
                JOptionPane.showMessageDialog(createBillboardsPanel, e.getMessage());
                System.exit(0);
            }
            txtMessage.setText("");
            txtInformation.setText("");
            txtBgColor.setText("#0000FF");
            txtMsColor.setText("#FFFF00");
            txtImage.setText("");

        } else {
            if(!isValidInfo) {
                JOptionPane.showMessageDialog(createBillboardsPanel, "Please describe your billboard first");
            } else if (!isValidImage) {
                JOptionPane.showMessageDialog(createBillboardsPanel, "Cannot find image file");
            } else if (!isValidColor) {
                 JOptionPane.showMessageDialog(createBillboardsPanel, "Color is not valid");
            }

        }
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void btnPreviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreviewActionPerformed

        containerPanelMPI.setVisible(false);
        containerPanelM.setVisible(false);
        containerPanelP.setVisible(false);
        containerPanelI.setVisible(false);
        containerPanelMP.setVisible(false);
        containerPanelMI.setVisible(false);
        containerPanelPI.setVisible(false);

        String message, information, bgColor, msColor, infoColor, picture;
        boolean isOk = true, isValidColor = true, isValidInfo = true, isValidImage = true;
        int id = 0;

        message = txtMessage.getText();
        information = txtInformation.getText();
        bgColor = txtBgColor.getText();
        msColor = txtMsColor.getText();
        picture = txtImage.getText();
        infoColor = txtInfoColor.getText();


        // Check if all input fields are valid
        if (message.isEmpty() && information.isEmpty() && picture.isEmpty()) {
            isOk = false;
            isValidInfo = false;
        }
        if (bgColor.isEmpty() || msColor.isEmpty() || infoColor.isEmpty()) {
            isOk = false;
            isValidInfo = false;

        } else {
            if (!ColorHelper.isHexString(bgColor) || !ColorHelper.isHexString(msColor) || !ColorHelper.isHexString(infoColor)){
                isOk = false;
                isValidColor = false;
            }
        }

        if (!picture.isEmpty()) {
            if (!picture.startsWith("http://") && !picture.startsWith("https://")) {
                if (!ImageFormatter.isBase64String(picture)) {
                    picture = ImageFormatter.pathToData(picture);
                    if (picture == null) {
                        isOk = false;
                        isValidImage = false;
                    }
                }

            }
        }
        // If all input fields are valid, preview the frame according to input fields
        if (isOk) {
            billboard_preview_frame.setVisible(true);
            // Preview billboard with message, information and picture
            if(!message.isEmpty() && !picture.isEmpty() && !information.isEmpty()) {
                containerPanelMPI.setVisible(true);
                containerPanelM.setVisible(false);
                containerPanelP.setVisible(false);
                containerPanelI.setVisible(false);
                containerPanelMP.setVisible(false);
                containerPanelMI.setVisible(false);
                containerPanelPI.setVisible(false);

                containerPanelMPI.setBackground(ColorHelper.hex2Rgb(bgColor));
                lbMessageMPI.setForeground(ColorHelper.hex2Rgb(msColor));
                lbInfoMPI.setForeground(ColorHelper.hex2Rgb(infoColor));

                lbMessageMPI.setText("<html><body style='text-align: center'>"+ message + "</html>");
                lbInfoMPI.setText("<html><body style='text-align: center'>"+ information + "</html>");
                try {

                    if (picture.contains("https:") || picture.contains("http:")) {
                        URL url = new URL(picture);
                        Image image = ImageIO.read(url);
                        image = image.getScaledInstance(-1, lbPictureMPI.getPreferredSize().height,Image.SCALE_SMOOTH);
                        lbPictureMPI.setIcon(new ImageIcon(image));
                    }else {
                        byte[] imageBytes = Base64.getDecoder().decode(picture);
                        Image image = ImageIO.read(new ByteArrayInputStream(imageBytes));

                        image = image.getScaledInstance(-1, lbPictureMPI.getPreferredSize().height,Image.SCALE_SMOOTH);
                        lbPictureMPI.setIcon(new ImageIcon(image));
                    }

                } catch (Exception ex){
                    billboard_preview_frame.setVisible(false);
                    JOptionPane.showMessageDialog(createBillboardsPanel, "Cannot load image");

                }




            }
            // Preview billboard with message
            else if (!message.equals("") && picture.equals("") && information.equals("") ) {
                containerPanelMPI.setVisible(false);
                containerPanelM.setVisible(true);
                containerPanelP.setVisible(false);
                containerPanelI.setVisible(false);
                containerPanelMP.setVisible(false);
                containerPanelMI.setVisible(false);
                containerPanelPI.setVisible(false);

                containerPanelM.setBackground(ColorHelper.hex2Rgb(bgColor));
                lbMessageM.setText("<html><body style='text-align: center'>"+ message + "</html>");
                lbMessageM.setForeground(ColorHelper.hex2Rgb(msColor));


            }
            // Preview billboard with picture
            else if (message.equals("") && !picture.equals("") && information.equals("") ) {
                containerPanelMPI.setVisible(false);
                containerPanelM.setVisible(false);
                containerPanelP.setVisible(true);
                containerPanelI.setVisible(false);
                containerPanelMP.setVisible(false);
                containerPanelMI.setVisible(false);
                containerPanelPI.setVisible(false);

                containerPanelP.setBackground(ColorHelper.hex2Rgb(bgColor));
                try {

                    if (picture.contains("https:") || picture.contains("http:")) {
                        URL url = new URL(picture);
                        Image image = ImageIO.read(url);
                        image = image.getScaledInstance(-1, lbPictureP.getPreferredSize().height,Image.SCALE_SMOOTH);
                        lbPictureP.setIcon(new ImageIcon(image));
                    }else {
                        byte[] imageBytes = Base64.getDecoder().decode(picture);
                        Image image = ImageIO.read(new ByteArrayInputStream(imageBytes));
                        image = image.getScaledInstance(-1, lbPictureP.getPreferredSize().height,Image.SCALE_SMOOTH);
                        lbPictureP.setIcon(new ImageIcon(image));
                    }

                } catch (Exception ex){
                    billboard_preview_frame.setVisible(false);
                    JOptionPane.showMessageDialog(createBillboardsPanel, "Cannot load image");

                }

            }
            // Preview billboard with picture
            else if (message.equals("") && picture.equals("") && !information.equals("") ) {
                containerPanelMPI.setVisible(false);
                containerPanelM.setVisible(false);
                containerPanelP.setVisible(false);
                containerPanelI.setVisible(true);
                containerPanelMP.setVisible(false);
                containerPanelMI.setVisible(false);
                containerPanelPI.setVisible(false);

                containerPanelI.setBackground(ColorHelper.hex2Rgb(bgColor));

                lbInfoI.setText("<html><body style='text-align: center'>"+ information + "</html>");
                lbInfoI.setForeground(ColorHelper.hex2Rgb(infoColor));

            }
            // Preview billboard with message and picture
            else if (!message.equals("") && !picture.equals("") && information.equals("") ) {
                containerPanelMPI.setVisible(false);
                containerPanelM.setVisible(false);
                containerPanelP.setVisible(false);
                containerPanelI.setVisible(false);
                containerPanelMP.setVisible(true);
                containerPanelMI.setVisible(false);
                containerPanelPI.setVisible(false);

                containerPanelMP.setBackground(ColorHelper.hex2Rgb(bgColor));

                lbMessageMP.setText("<html><body style='text-align: center'>"+ message + "</html>");
                lbMessageMP.setForeground(ColorHelper.hex2Rgb(msColor));

                try {

                    if (picture.contains("https:") || picture.contains("http:")) {
                        URL url = new URL(picture);
                        Image image = ImageIO.read(url);
                        image = image.getScaledInstance(-1, lbPictureMP.getPreferredSize().height,Image.SCALE_SMOOTH);
                        lbPictureMP.setIcon(new ImageIcon(image));
                    }else {
                        byte[] imageBytes = Base64.getDecoder().decode(picture);
                        Image image = ImageIO.read(new ByteArrayInputStream(imageBytes));
                        image = image.getScaledInstance(-1, lbPictureMP.getPreferredSize().height,Image.SCALE_SMOOTH);
                        lbPictureMP.setIcon(new ImageIcon(image));
                    }

                } catch (Exception ex){
                    billboard_preview_frame.setVisible(false);
                    JOptionPane.showMessageDialog(createBillboardsPanel, "Cannot load image");

                }

            }
            // Preview billboard with message and information
            else if (!message.equals("") && picture.equals("") && !information.equals("") ) {
                containerPanelMPI.setVisible(false);
                containerPanelM.setVisible(false);
                containerPanelP.setVisible(false);
                containerPanelI.setVisible(false);
                containerPanelMP.setVisible(false);
                containerPanelMI.setVisible(true);
                containerPanelPI.setVisible(false);

                containerPanelMI.setBackground(ColorHelper.hex2Rgb(bgColor));
                lbMessageMI.setText("<html><body style='text-align: center'>"+ message + "</html>");
                lbMessageMI.setForeground(ColorHelper.hex2Rgb(msColor));

                lbInfoMI.setText("<html><body style='text-align: center'>"+ information + "</html>");
                lbInfoMI.setForeground(ColorHelper.hex2Rgb(infoColor));

            }
            // Preview billboard with information and picture
            else if (message.equals("") && !picture.equals("") && !information.equals("") ) {
                containerPanelMPI.setVisible(false);
                containerPanelM.setVisible(false);
                containerPanelP.setVisible(false);
                containerPanelI.setVisible(false);
                containerPanelMP.setVisible(false);
                containerPanelMI.setVisible(false);
                containerPanelPI.setVisible(true);

                containerPanelPI.setBackground(ColorHelper.hex2Rgb(bgColor));

                lbInfoPI.setText("<html><body style='text-align: center'>"+ information + "</html>");
                lbInfoPI.setForeground(ColorHelper.hex2Rgb(infoColor));

                try {
                    if (picture.contains("https:") || picture.contains("http:")) {
                        URL url = new URL(picture);
                        Image image = ImageIO.read(url);
                        image = image.getScaledInstance(-1, lbPicturePI.getPreferredSize().height,Image.SCALE_SMOOTH);
                        lbPicturePI.setIcon(new ImageIcon(image));
                    }else {
                        byte[] imageBytes = Base64.getDecoder().decode(picture);
                        Image image = ImageIO.read(new ByteArrayInputStream(imageBytes));
                        image = image.getScaledInstance(-1, lbPicturePI.getPreferredSize().height,Image.SCALE_SMOOTH);
                        lbPicturePI.setIcon(new ImageIcon(image));
                    }

                } catch (Exception ex){
                    billboard_preview_frame.setVisible(false);
                    JOptionPane.showMessageDialog(createBillboardsPanel, "Cannot load image");

                }
            }
        }else {
            billboard_preview_frame.setVisible(false);
            if (!isValidInfo)
                JOptionPane.showMessageDialog(createBillboardsPanel, "Input enough field to preview billboard");
            else if (!isValidImage)
                JOptionPane.showMessageDialog(createBillboardsPanel, "Cannot find image");
            else if (!isValidColor)
                JOptionPane.showMessageDialog(createBillboardsPanel, "The color is not valid");
        }
    }//GEN-LAST:event_btnPreviewActionPerformed

    private void lbListMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbListMousePressed
        // Press List Billboards button to access ListBillboardsPage
        ListBillboardsPage listBillboardsPage = new ListBillboardsPage(token);
        listBillboardsPage.setVisible(true);
        this.setVisible(false);

    }//GEN-LAST:event_lbListMousePressed

    private void lbEditMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbEditMousePressed
        // Press Edit Users button to access EditUserPage
        EditUserPage editUserPage = new EditUserPage(token);
        editUserPage.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_lbEditMousePressed

    private void lbIconScheduleMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbIconScheduleMousePressed
        // Press Schedule Billboards button to access ScheduleBillboardsPage if users have "SB" permission
        if (this.permission.contains("SB")) {
            ScheduleBillboardsPage scheduleBillboardsPage = new ScheduleBillboardsPage(token);
            scheduleBillboardsPage.setVisible(true);
            this.setVisible(false);
        }
        else {
            JOptionPane.showMessageDialog(createBillboardsPanel, "Do not have permission");
        }
    }//GEN-LAST:event_lbIconScheduleMousePressed

    private void btnLogOutMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLogOutMousePressed
        try{
            // Connect to server and send log out request
            ServerConnection svCon = new ServerConnection();
            svCon.sendRequest(new LogoutRequest());
            new LogIn().setVisible(true);
            this.dispose();
        } catch (ServerClosedException e) {
            JOptionPane.showMessageDialog(createBillboardsPanel, e.getMessage());
            System.exit(0);
        }

    }//GEN-LAST:event_btnLogOutMousePressed

    private void btnImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportActionPerformed
        int returnVal = fileXmlChooser.showOpenDialog(null);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            try{
                File file = fileXmlChooser.getSelectedFile();
                //This is where a real application would open the file.
                ReadXmlFile reader = new ReadXmlFile();
                reader.setXmlFile(file);
                reader.readFile();

                //Set text according to xml file
                txtBgColor.setText(reader.getBackgroundColor());
                txtMsColor.setText(reader.getMessageColor());
                txtInfoColor.setText(reader.getInfoColor());
                txtImage.setText(reader.getPictureUrl());
                txtInformation.setText(reader.getInformation());
                txtMessage.setText(reader.getMessage());
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(createBillboardsPanel, "Invalid .xml file");
            }

        } else {
            System.out.println("Cannot find file");
        }

    }//GEN-LAST:event_btnImportActionPerformed

    private void btnExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportActionPerformed
        String message, information, backgroundColor, msColor, infoColor, picture;
        WritingToXml w = new WritingToXml();
        boolean isOk = true, isValidColor = true, isValidContent = true, isValidImage = true;

        message = txtMessage.getText();
        information = txtInformation.getText();
        backgroundColor = txtBgColor.getText();
        msColor = txtMsColor.getText();
        picture = txtImage.getText();
        infoColor = txtInfoColor.getText();

        // Check if all input fields are valid
        if ((message.isEmpty() && information.isEmpty() && picture.isEmpty()) ) {
            isOk = false;
            isValidContent = false;
        }
        if (backgroundColor.isEmpty() || msColor.isEmpty() || infoColor.isEmpty()) {
            isOk = false;
            isValidColor = false;
        }else {
            if (!ColorHelper.isHexString(backgroundColor) || !ColorHelper.isHexString(msColor) || !ColorHelper.isHexString(infoColor)){
                isOk = false;
                isValidColor = false;
            }
        }

        if (picture.isEmpty()){
            picture = "";
        } else {
            if (!picture.startsWith("http://") && !picture.startsWith("https://")) {
                if (!ImageFormatter.isBase64String(picture)) {
                    picture = ImageFormatter.pathToData(picture);
                    if (picture == null) {
                        isOk = false;
                        isValidImage = false;
                    }
                }

            }
        }

        // If all input fields are valid, export billboard to an xml file
        if (isOk) {
            w.setBackgroundColor(backgroundColor);
            w.setMessageColor(msColor);
            w.setInfoColor(infoColor);
            w.setFileName(txtMessage.getText() + userId + ".xml");
            w.setInformation(information);
            w.setMessage(message);
            if (!picture.startsWith("http://") && !picture.startsWith("https://")) {
                w.setData(picture);
                w.setPictureUrl("");

            } else  {
                w.setData("");
                w.setPictureUrl(picture);
            }

            w.generateXml();
            JOptionPane.showMessageDialog(createBillboardsPanel, "Export successfully!");
        } else {
            if (!isValidContent)
                JOptionPane.showMessageDialog(createBillboardsPanel, "Please describe your billboard first");
            else if (!isValidColor)
                JOptionPane.showMessageDialog(createBillboardsPanel, "Please choose the color");
            else if (!isValidImage)
                JOptionPane.showMessageDialog(createBillboardsPanel, "Cannot find image");
        }
    }//GEN-LAST:event_btnExportActionPerformed

    private void btnChooseBgColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChooseBgColorActionPerformed
        // Show JColorChooser for background color
        Color c = JColorChooser.showDialog(null, "Choose a Color", txtBgColor.getForeground());
        if (c != null) {
        txtBgColor.setText(String.format("#%02X%02X%02X", c.getRed(), c.getGreen(), c.getBlue()));
        }
    }//GEN-LAST:event_btnChooseBgColorActionPerformed

    private void btnChooseMessageColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChooseMessageColorActionPerformed
        // Show JColorChooser for font color
        Color c = JColorChooser.showDialog(null, "Choose a Color", txtBgColor.getForeground());
        if (c != null) {
            txtMsColor.setText(String.format("#%02X%02X%02X", c.getRed(), c.getGreen(), c.getBlue()));
        }
    }//GEN-LAST:event_btnChooseMessageColorActionPerformed

    private void btnChooseImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChooseImageActionPerformed
        // Show JFileChooser for choosing image from local storage
        int returnVal = fileImageChooser.showOpenDialog(null);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fileImageChooser.getSelectedFile();
            txtImage.setText(file.getAbsolutePath());
        } else {
            System.out.println("Cannot find file");
        }
    }//GEN-LAST:event_btnChooseImageActionPerformed

    private void txtImageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtImageMouseClicked
       txtImage.setText("");
    }//GEN-LAST:event_txtImageMouseClicked

    private void btnChooseInfoColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChooseInfoColorActionPerformed
        
        // Show JColorChooser for font color
        Color c = JColorChooser.showDialog(null, "Choose a Color", txtBgColor.getForeground());
        if (c != null) {
            txtInfoColor.setText(String.format("#%02X%02X%02X", c.getRed(), c.getGreen(), c.getBlue()));
        }
    }//GEN-LAST:event_btnChooseInfoColorActionPerformed
    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JInternalFrame billboard_preview_frame;
    private javax.swing.JButton btnChooseBgColor;
    private javax.swing.JButton btnChooseImage;
    private javax.swing.JButton btnChooseInfoColor;
    private javax.swing.JButton btnChooseMessageColor;
    private javax.swing.JPanel btnCreate;
    private javax.swing.JPanel btnEdit;
    private javax.swing.JButton btnExport;
    private javax.swing.JPanel btnHome;
    private javax.swing.JButton btnImport;
    private javax.swing.JPanel btnList;
    private javax.swing.JPanel btnLogOut;
    private javax.swing.JButton btnPreview;
    private javax.swing.JPanel btnSchedule;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JPanel containerPanelI;
    private javax.swing.JPanel containerPanelM;
    private javax.swing.JPanel containerPanelMI;
    private javax.swing.JPanel containerPanelMP;
    private javax.swing.JPanel containerPanelMPI;
    private javax.swing.JPanel containerPanelP;
    private javax.swing.JPanel containerPanelPI;
    private javax.swing.JPanel createBillboardsPanel;
    private javax.swing.JPanel createPanel;
    private javax.swing.JPanel fileChooserPanel;
    private javax.swing.JFileChooser fileImageChooser;
    private javax.swing.JFileChooser fileXmlChooser;
    private javax.swing.JPanel introPanel;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel lbAppName;
    private javax.swing.JLabel lbAppNameLeft;
    private javax.swing.JLabel lbBackground;
    private javax.swing.JLabel lbBgColor;
    private javax.swing.JLabel lbBgColor1;
    private javax.swing.JLabel lbClose;
    private javax.swing.JLabel lbCreate;
    private javax.swing.JLabel lbEdit;
    private javax.swing.JLabel lbFontColor;
    private javax.swing.JLabel lbHome;
    private javax.swing.JLabel lbIconCreate;
    private javax.swing.JLabel lbIconEdit;
    private javax.swing.JLabel lbIconHome;
    private javax.swing.JLabel lbIconList;
    private javax.swing.JLabel lbIconLogout;
    private javax.swing.JLabel lbIconSchedule;
    private javax.swing.JLabel lbImage;
    private javax.swing.JLabel lbInfo;
    private javax.swing.JLabel lbInfoI;
    private javax.swing.JLabel lbInfoMI;
    private javax.swing.JLabel lbInfoMPI;
    private javax.swing.JLabel lbInfoPI;
    private javax.swing.JLabel lbList;
    private javax.swing.JLabel lbLogout;
    private javax.swing.JLabel lbMessage;
    private javax.swing.JLabel lbMessageM;
    private javax.swing.JLabel lbMessageMI;
    private javax.swing.JLabel lbMessageMP;
    private javax.swing.JLabel lbMessageMPI;
    private javax.swing.JLabel lbPictureMP;
    private javax.swing.JLabel lbPictureMPI;
    private javax.swing.JLabel lbPictureP;
    private javax.swing.JLabel lbPicturePI;
    private javax.swing.JLabel lbSchedule;
    private javax.swing.JLabel lbTitle;
    private javax.swing.JLabel lbUserInfo;
    private javax.swing.JLabel lbWelcomeMessage;
    private javax.swing.JLabel lbWelcomeTitle;
    private javax.swing.JSeparator separator;
    private javax.swing.JPanel sidepanel;
    private javax.swing.JScrollPane textScrollPanel;
    private javax.swing.JTextField txtBgColor;
    private javax.swing.JTextField txtImage;
    private javax.swing.JTextField txtInfoColor;
    private javax.swing.JTextArea txtInformation;
    private javax.swing.JTextField txtMessage;
    private javax.swing.JTextField txtMsColor;
    private javax.swing.JPanel welcomePanel;
    // End of variables declaration//GEN-END:variables

}
