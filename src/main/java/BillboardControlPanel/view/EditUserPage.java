/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package BillboardControlPanel.view;

import ServerConnection.Exceptions.ServerClosedException;
import ServerConnection.ServerConnection;
import Commmunication.Message;
import Commmunication.Requests.*;
import Commmunication.Response.*;
import BillboardControlPanel.controller.DAO;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.IOException;
import java.security.NoSuchAlgorithmException;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;

import BillboardControlPanel.model.User;
import Utils.Hash.Hash;
import Utils.Token.Token;

/**
 * Edit User Page
 * @author Asus
 */
public class EditUserPage extends javax.swing.JFrame {


    private ArrayList<User> listUser;
    private DefaultTableModel model;
    private Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
    private String token;
    private String permission;
    private String currentUser;
    private String userId;
    /**
     * Creates new form EditUserPage
     */
    public EditUserPage(String token){
        this.token = token;
        String decodedToken = Token.decodeToken(this.token);
        //Get user information from decoded token
        this.permission = decodedToken.split("%%%%")[2];
        this.currentUser = decodedToken.split("%%%%")[1];
        this.userId = decodedToken.split("%%%%")[0];

        initComponents();
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        createUserPanel.setVisible(false);
        editUserPanel.setVisible(false);
        createUserPanel.setVisible(false);

        // The contents of list users will displayed depends on user's permission
        // If users have permission Edit Users, they can see the list of all users
        try{
            listUser = new DAO().getListUser(this.token);
            // If users do not have permission Edit Users, they can only see their account
            if(!permission.contains("EU")){
                User user = new User();
                for (int i = 0; i < listUser.size(); i++) {
                    if (listUser.get(i).getUsername().equals(this.currentUser)) {
                        user = listUser.get(i);
                    }
                }
                listUser.clear();
                listUser.add(user);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(editUserPanel, e.getMessage());
            System.exit(0);
        }





        // Create table to display users' information
        TableColumnModel columnModel = userTable.getColumnModel();
        model = (DefaultTableModel) userTable.getModel();
        columnModel.getColumn(0).setPreferredWidth(100);
        model.setColumnIdentifiers(new Object[] {
            "User ID", "Username",  "Permission","Created at", "Update at"
        });
        showTable();
    }
    
    



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        editUserRootPanel = new javax.swing.JPanel();
        sidepanel = new javax.swing.JPanel();
        separator = new javax.swing.JSeparator();
        lbAppNameLeft = new javax.swing.JLabel();
        btnHome = new javax.swing.JPanel();
        lbIconHome = new javax.swing.JLabel();
        lbHome = new javax.swing.JLabel();
        btnCreate = new javax.swing.JPanel();
        lbIconCreate = new javax.swing.JLabel();
        lbCreate = new javax.swing.JLabel();
        btnList = new javax.swing.JPanel();
        lbIconList = new javax.swing.JLabel();
        lbList = new javax.swing.JLabel();
        btnSchedule = new javax.swing.JPanel();
        lbiconSchedule = new javax.swing.JLabel();
        lbSchedule = new javax.swing.JLabel();
        btnEdit = new javax.swing.JPanel();
        lbIconEdit = new javax.swing.JLabel();
        lbEdit = new javax.swing.JLabel();
        btnLogOut = new javax.swing.JPanel();
        lbIconLogout = new javax.swing.JLabel();
        lbLogout = new javax.swing.JLabel();
        listPanel = new javax.swing.JPanel();
        lbListTitle = new javax.swing.JLabel();
        btnDeleteTable = new javax.swing.JButton();
        tableScrollPanel = new javax.swing.JScrollPane();
        userTable = new javax.swing.JTable();
        btnEditTable = new javax.swing.JButton();
        btnAddTabel = new javax.swing.JButton();
        editUserPanel = new javax.swing.JPanel();
        lbTitleEdit = new javax.swing.JLabel();
        lbUsernameEdit = new javax.swing.JLabel();
        lbPasswordEdit = new javax.swing.JLabel();
        lbPermissionEdit = new javax.swing.JLabel();
        txtEditUsername = new javax.swing.JTextField();
        btnCancelEdit = new javax.swing.JButton();
        btnSaveEdit = new javax.swing.JButton();
        txtEditPassword = new javax.swing.JPasswordField();
        lbReenterEdit = new javax.swing.JLabel();
        txtEditCheckPassword = new javax.swing.JPasswordField();
        cbCreate1 = new javax.swing.JCheckBox();
        cbEditBb1 = new javax.swing.JCheckBox();
        cbEditUser1 = new javax.swing.JCheckBox();
        cbSchedule1 = new javax.swing.JCheckBox();
        lbUserIdEdit = new javax.swing.JLabel();
        txtEditUserId = new javax.swing.JTextField();
        createUserPanel = new javax.swing.JPanel();
        lbTitleCreate = new javax.swing.JLabel();
        lbUsernameCreate = new javax.swing.JLabel();
        lbPasswordCreate = new javax.swing.JLabel();
        lbPermissionCreate = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        btnCancel = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        txtPassword = new javax.swing.JPasswordField();
        lbReenterCreate = new javax.swing.JLabel();
        txtCheckPassword = new javax.swing.JPasswordField();
        cbCreate = new javax.swing.JCheckBox();
        cbEditBb = new javax.swing.JCheckBox();
        cbEditUser = new javax.swing.JCheckBox();
        cbSchedule = new javax.swing.JCheckBox();
        lbBackground = new javax.swing.JLabel();
        welcomePanel = new javax.swing.JPanel();
        lbWelcomeTitle = new javax.swing.JLabel();
        lbWelcomeInfo = new javax.swing.JLabel();
        lbAppName = new javax.swing.JLabel();
        lbClose = new javax.swing.JLabel();
        lbUserInfo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        editUserRootPanel.setBackground(new java.awt.Color(255, 255, 255));
        editUserRootPanel.setMinimumSize(new java.awt.Dimension(1920, 1080));
        editUserRootPanel.setPreferredSize(new java.awt.Dimension(1920, 1080));
        editUserRootPanel.setLayout(null);

        sidepanel.setBackground(new java.awt.Color(54, 33, 89));
        sidepanel.setPreferredSize(new Dimension(screenSize.width / 5, screenSize.height));
        sidepanel.setLayout(null);

        separator.setPreferredSize(new java.awt.Dimension(50, 5));
        sidepanel.add(separator);
        separator.setBounds(30, 90, 220, 10);

        lbAppNameLeft.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lbAppNameLeft.setForeground(new java.awt.Color(204, 204, 204));
        lbAppNameLeft.setText("BBCreator");
        sidepanel.add(lbAppNameLeft);
        lbAppNameLeft.setBounds(30, 50, 115, 32);

        btnHome.setBackground(new java.awt.Color(64, 43, 100));
        btnHome.setPreferredSize(new Dimension(screenSize.width / 5, 50) );
        btnHome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnHomeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnHomeMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnHomejLabel1MousePressed(evt);
            }
        });

        lbIconHome.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    lbIconHome.setIcon(new javax.swing.ImageIcon("src/main/java/BillboardControlPanel/view/images/icons8_home_15px_1.png")); // NOI18N
        lbIconHome.setToolTipText("");
        lbIconHome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lbIconHomebtn_homeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lbIconHomebtn_homeMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lbIconHomeMousePressed(evt);
            }
        });

        lbHome.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbHome.setForeground(new java.awt.Color(204, 204, 204));
        lbHome.setText("Home");
        lbHome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lbHomebtn_homeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lbHomebtn_homeMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lbHomejLabel1MousePressed(evt);
            }
        });

        javax.swing.GroupLayout btnHomeLayout = new javax.swing.GroupLayout(btnHome);
        btnHome.setLayout(btnHomeLayout);
        btnHomeLayout.setHorizontalGroup(
            btnHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnHomeLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(lbIconHome, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbHome)
                .addContainerGap(272, Short.MAX_VALUE))
        );
        btnHomeLayout.setVerticalGroup(
            btnHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnHomeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(btnHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lbHome)
                    .addComponent(lbIconHome, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        sidepanel.add(btnHome);
        btnHome.setBounds(0, 190, 384, 50);

        btnCreate.setBackground(new java.awt.Color(64, 43, 100));
        btnCreate.setPreferredSize(new Dimension(screenSize.width / 5, 50 ));
        btnCreate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lbIconCreateMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lbIconCreateMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lbIconCreateMousePressed(evt);
            }
        });

        lbIconCreate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbIconCreate.setIcon(new javax.swing.ImageIcon("src/main/java/BillboardControlPanel/view/images/icons8_create_15px.png")); // NOI18N
        lbIconCreate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lbIconCreateMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lbIconCreateMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lbIconCreateMousePressed(evt);
            }
        });

        lbCreate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbCreate.setForeground(new java.awt.Color(204, 204, 204));
        lbCreate.setText("Create Billboards");
        lbCreate.setToolTipText("");
        lbCreate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lbIconCreateMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lbIconCreateMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lbIconCreateMousePressed(evt);
            }
        });

        javax.swing.GroupLayout btnCreateLayout = new javax.swing.GroupLayout(btnCreate);
        btnCreate.setLayout(btnCreateLayout);
        btnCreateLayout.setHorizontalGroup(
            btnCreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnCreateLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(lbIconCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbCreate)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        btnCreateLayout.setVerticalGroup(
            btnCreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnCreateLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(btnCreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbIconCreate, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                    .addComponent(lbCreate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(12, 12, 12))
        );

        sidepanel.add(btnCreate);
        btnCreate.setBounds(0, 240, 384, 50);

        btnList.setBackground(new java.awt.Color(64, 43, 100));
        btnList.setPreferredSize(new Dimension(screenSize.width / 5, 50 ));
        btnList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnListMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnListMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnListMousePressed(evt);
            }
        });

        lbIconList.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbIconList.setIcon(new javax.swing.ImageIcon("src/main/java/BillboardControlPanel/view/images/icons8_list_15px.png")); // NOI18N
        lbIconList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnListMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnListMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnListMousePressed(evt);
            }
        });

        lbList.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbList.setForeground(new java.awt.Color(204, 204, 204));
        lbList.setText("List Billboards");
        lbList.setToolTipText("");
        lbList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnListMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnListMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnListMousePressed(evt);
            }
        });

        javax.swing.GroupLayout btnListLayout = new javax.swing.GroupLayout(btnList);
        btnList.setLayout(btnListLayout);
        btnListLayout.setHorizontalGroup(
            btnListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnListLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(lbIconList, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbList)
                .addContainerGap(223, Short.MAX_VALUE))
        );
        btnListLayout.setVerticalGroup(
            btnListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnListLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(btnListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbList, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                    .addComponent(lbIconList, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE))
                .addContainerGap())
        );

        sidepanel.add(btnList);
        btnList.setBounds(0, 290, 384, 50);

        btnSchedule.setBackground(new java.awt.Color(64, 43, 100));
        btnSchedule.setPreferredSize(new Dimension(screenSize.width / 5, 50 ));
        btnSchedule.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnSchedulelb_schedule_billboardsMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnSchedulelb_schedule_billboardsMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnScheduleMousePressed(evt);
            }
        });

        lbiconSchedule.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbiconSchedule.setIcon(new javax.swing.ImageIcon("src/main/java/BillboardControlPanel/view/images/icons8_schedule_15px_1.png")); // NOI18N
        lbiconSchedule.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lbiconSchedulelb_schedule_billboardsMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lbiconSchedulelb_schedule_billboardsMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnScheduleMousePressed(evt);
            }
        });

        lbSchedule.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbSchedule.setForeground(new java.awt.Color(204, 204, 204));
        lbSchedule.setText("Schedule Billboards");
        lbSchedule.setToolTipText("");
        lbSchedule.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lbScheduleMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lbScheduleMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnScheduleMousePressed(evt);
            }
        });

        javax.swing.GroupLayout btnScheduleLayout = new javax.swing.GroupLayout(btnSchedule);
        btnSchedule.setLayout(btnScheduleLayout);
        btnScheduleLayout.setHorizontalGroup(
            btnScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnScheduleLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(lbiconSchedule, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbSchedule)
                .addContainerGap(185, Short.MAX_VALUE))
        );
        btnScheduleLayout.setVerticalGroup(
            btnScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnScheduleLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(btnScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbSchedule, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbiconSchedule, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        sidepanel.add(btnSchedule);
        btnSchedule.setBounds(0, 340, 384, 50);

        btnEdit.setBackground(new java.awt.Color(85, 65, 118));
        btnEdit.setPreferredSize(new Dimension(screenSize.width / 5, 50 ));

        lbIconEdit.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbIconEdit.setIcon(new javax.swing.ImageIcon("src/main/java/BillboardControlPanel/view/images/icons8_edit_profile_15px_1.png")); // NOI18N

        lbEdit.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbEdit.setForeground(new java.awt.Color(204, 204, 204));
        lbEdit.setText("Edit Users");
        lbEdit.setToolTipText("");

        javax.swing.GroupLayout btnEditLayout = new javax.swing.GroupLayout(btnEdit);
        btnEdit.setLayout(btnEditLayout);
        btnEditLayout.setHorizontalGroup(
            btnEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnEditLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(lbIconEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbEdit)
                .addContainerGap(252, Short.MAX_VALUE))
        );
        btnEditLayout.setVerticalGroup(
            btnEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, btnEditLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(btnEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbIconEdit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbEdit, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE))
                .addContainerGap())
        );

        sidepanel.add(btnEdit);
        btnEdit.setBounds(0, 390, 384, 50);

        btnLogOut.setBackground(new java.awt.Color(64, 43, 100));
        btnLogOut.setPreferredSize(new Dimension(screenSize.width / 5, 50 ));
        btnLogOut.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnLogOutMousePressed(evt);
            }
        });

        lbIconLogout.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbIconLogout.setIcon(new javax.swing.ImageIcon("src/main/java/BillboardControlPanel/view/images/icons8_logout_rounded_left_15px.png")); // NOI18N
        lbIconLogout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnLogOutMousePressed(evt);
            }
        });

        lbLogout.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbLogout.setForeground(new java.awt.Color(204, 204, 204));
        lbLogout.setText("Log Out");
        lbLogout.setToolTipText("");
        lbLogout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnLogOutMousePressed(evt);
            }
        });

        javax.swing.GroupLayout btnLogOutLayout = new javax.swing.GroupLayout(btnLogOut);
        btnLogOut.setLayout(btnLogOutLayout);
        btnLogOutLayout.setHorizontalGroup(
            btnLogOutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnLogOutLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(lbIconLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbLogout)
                .addContainerGap(264, Short.MAX_VALUE))
        );
        btnLogOutLayout.setVerticalGroup(
            btnLogOutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, btnLogOutLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(btnLogOutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbIconLogout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbLogout, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE))
                .addContainerGap())
        );

        sidepanel.add(btnLogOut);
        btnLogOut.setBounds(0, 950, 384, 60);

        editUserRootPanel.add(sidepanel);
        sidepanel.setBounds(0, 0, 384, 1080);

        lbListTitle.setBackground(new java.awt.Color(0, 0, 0));
        lbListTitle.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lbListTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbListTitle.setText("User List");
        lbListTitle.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        btnDeleteTable.setBackground(new java.awt.Color(90, 148, 210));
        btnDeleteTable.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnDeleteTable.setForeground(new java.awt.Color(255, 255, 255));
        btnDeleteTable.setText("Delete");
        btnDeleteTable.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnDeleteTable.setBorderPainted(false);
        btnDeleteTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnDeleteTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteTableActionPerformed(evt);
            }
        });

        userTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "User ID", "Username", "Password", "Permission", "Created at", "Update at"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableScrollPanel.setViewportView(userTable);

        btnEditTable.setBackground(new java.awt.Color(90, 148, 210));
        btnEditTable.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnEditTable.setForeground(new java.awt.Color(255, 255, 255));
        btnEditTable.setText("Edit");
        btnEditTable.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnEditTable.setBorderPainted(false);
        btnEditTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnEditTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditTableActionPerformed(evt);
            }
        });

        btnAddTabel.setBackground(new java.awt.Color(90, 148, 210));
        btnAddTabel.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnAddTabel.setForeground(new java.awt.Color(255, 255, 255));
        btnAddTabel.setText("Add");
        btnAddTabel.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnAddTabel.setBorderPainted(false);
        btnAddTabel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnAddTabel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddTabelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout listPanelLayout = new javax.swing.GroupLayout(listPanel);
        listPanel.setLayout(listPanelLayout);
        listPanelLayout.setHorizontalGroup(
            listPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(listPanelLayout.createSequentialGroup()
                .addGap(291, 291, 291)
                .addComponent(lbListTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, listPanelLayout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addGroup(listPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, listPanelLayout.createSequentialGroup()
                        .addComponent(btnEditTable, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(147, 147, 147)
                        .addComponent(btnAddTabel, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(157, 157, 157)
                        .addComponent(btnDeleteTable, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(188, 188, 188))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, listPanelLayout.createSequentialGroup()
                        .addComponent(tableScrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 922, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23))))
        );
        listPanelLayout.setVerticalGroup(
            listPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(listPanelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(lbListTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(tableScrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 499, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(listPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDeleteTable, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEditTable, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddTabel, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        editUserRootPanel.add(listPanel);
        listPanel.setBounds(420, 360, 970, 660);

        editUserPanel.setBackground(new java.awt.Color(250, 250, 250));
        editUserPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204)));

        lbTitleEdit.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lbTitleEdit.setForeground(new java.awt.Color(90, 148, 210));
        lbTitleEdit.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbTitleEdit.setText("Edit user");

        lbUsernameEdit.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbUsernameEdit.setForeground(new java.awt.Color(90, 148, 210));
        lbUsernameEdit.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbUsernameEdit.setText("Username");

        lbPasswordEdit.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbPasswordEdit.setForeground(new java.awt.Color(90, 148, 210));
        lbPasswordEdit.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbPasswordEdit.setText("Password");

        lbPermissionEdit.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbPermissionEdit.setForeground(new java.awt.Color(90, 148, 210));
        lbPermissionEdit.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbPermissionEdit.setText("Permission");

        txtEditUsername.setBackground(new java.awt.Color(250, 250, 250));
        txtEditUsername.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtEditUsername.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(12, 91, 160)));

        btnCancelEdit.setBackground(new java.awt.Color(90, 148, 210));
        btnCancelEdit.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnCancelEdit.setForeground(new java.awt.Color(255, 255, 255));
        btnCancelEdit.setText("Cancel");
        btnCancelEdit.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnCancelEdit.setBorderPainted(false);
        btnCancelEdit.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnCancelEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelEditActionPerformed(evt);
            }
        });

        btnSaveEdit.setBackground(new java.awt.Color(90, 148, 210));
        btnSaveEdit.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnSaveEdit.setForeground(new java.awt.Color(255, 255, 255));
        btnSaveEdit.setText("Save");
        btnSaveEdit.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnSaveEdit.setBorderPainted(false);
        btnSaveEdit.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnSaveEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveEditActionPerformed(evt);
            }
        });

        txtEditPassword.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtEditPassword.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(12, 91, 160)));

        lbReenterEdit.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbReenterEdit.setForeground(new java.awt.Color(90, 148, 210));
        lbReenterEdit.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbReenterEdit.setText("Re-enter password");

        txtEditCheckPassword.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtEditCheckPassword.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(12, 91, 160)));

        cbCreate1.setBackground(new java.awt.Color(250, 250, 250));
        cbCreate1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cbCreate1.setForeground(new java.awt.Color(12, 91, 160));
        cbCreate1.setText("Create Billboards");
        cbCreate1.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(12, 91, 160)));

        cbEditBb1.setBackground(new java.awt.Color(250, 250, 250));
        cbEditBb1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cbEditBb1.setForeground(new java.awt.Color(12, 91, 160));
        cbEditBb1.setText("Edit All Billboards");
        cbEditBb1.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(12, 91, 160)));

        cbEditUser1.setBackground(new java.awt.Color(250, 250, 250));
        cbEditUser1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cbEditUser1.setForeground(new java.awt.Color(12, 91, 160));
        cbEditUser1.setText("Edit Users");
        cbEditUser1.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(12, 91, 160)));

        cbSchedule1.setBackground(new java.awt.Color(250, 250, 250));
        cbSchedule1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cbSchedule1.setForeground(new java.awt.Color(12, 91, 160));
        cbSchedule1.setText("Schedule Billboards");
        cbSchedule1.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(12, 91, 160)));

        lbUserIdEdit.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbUserIdEdit.setForeground(new java.awt.Color(90, 148, 210));
        lbUserIdEdit.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbUserIdEdit.setText("User ID");

        txtEditUserId.setEditable(false);
        txtEditUserId.setBackground(new java.awt.Color(250, 250, 250));
        txtEditUserId.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtEditUserId.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(12, 91, 160)));

        javax.swing.GroupLayout editUserPanelLayout = new javax.swing.GroupLayout(editUserPanel);
        editUserPanel.setLayout(editUserPanelLayout);
        editUserPanelLayout.setHorizontalGroup(
            editUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editUserPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbTitleEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53))
            .addGroup(editUserPanelLayout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addGroup(editUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(editUserPanelLayout.createSequentialGroup()
                        .addComponent(txtEditPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(editUserPanelLayout.createSequentialGroup()
                        .addGroup(editUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbUserIdEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(editUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtEditCheckPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 338, Short.MAX_VALUE)
                                .addComponent(lbReenterEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cbCreate1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cbEditBb1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cbEditUser1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cbSchedule1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editUserPanelLayout.createSequentialGroup()
                        .addGroup(editUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtEditUserId, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtEditUsername, javax.swing.GroupLayout.DEFAULT_SIZE, 340, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, editUserPanelLayout.createSequentialGroup()
                                .addComponent(btnSaveEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                                .addComponent(btnCancelEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, editUserPanelLayout.createSequentialGroup()
                                .addGroup(editUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbPermissionEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbPasswordEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbUsernameEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(63, 63, 63))))
        );
        editUserPanelLayout.setVerticalGroup(
            editUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editUserPanelLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(lbTitleEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addComponent(lbUserIdEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtEditUserId, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbUsernameEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtEditUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbPasswordEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtEditPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(lbReenterEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtEditCheckPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lbPermissionEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbCreate1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbEditBb1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbSchedule1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbEditUser1)
                .addGap(30, 30, 30)
                .addGroup(editUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSaveEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(73, Short.MAX_VALUE))
        );

        editUserRootPanel.add(editUserPanel);
        editUserPanel.setBounds(1430, 360, 470, 660);

        createUserPanel.setBackground(new java.awt.Color(250, 250, 250));
        createUserPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204)));

        lbTitleCreate.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lbTitleCreate.setForeground(new java.awt.Color(90, 148, 210));
        lbTitleCreate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbTitleCreate.setText("Create new user");

        lbUsernameCreate.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbUsernameCreate.setForeground(new java.awt.Color(90, 148, 210));
        lbUsernameCreate.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbUsernameCreate.setText("Username");

        lbPasswordCreate.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbPasswordCreate.setForeground(new java.awt.Color(90, 148, 210));
        lbPasswordCreate.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbPasswordCreate.setText("Password");

        lbPermissionCreate.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbPermissionCreate.setForeground(new java.awt.Color(90, 148, 210));
        lbPermissionCreate.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbPermissionCreate.setText("Permission");

        txtUsername.setBackground(new java.awt.Color(250, 250, 250));
        txtUsername.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtUsername.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(12, 91, 160)));

        btnCancel.setBackground(new java.awt.Color(90, 148, 210));
        btnCancel.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnCancel.setForeground(new java.awt.Color(255, 255, 255));
        btnCancel.setText("Cancel");
        btnCancel.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnCancel.setBorderPainted(false);
        btnCancel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnSave.setBackground(new java.awt.Color(90, 148, 210));
        btnSave.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnSave.setForeground(new java.awt.Color(255, 255, 255));
        btnSave.setText("Save");
        btnSave.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnSave.setBorderPainted(false);
        btnSave.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        txtPassword.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtPassword.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(12, 91, 160)));

        lbReenterCreate.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbReenterCreate.setForeground(new java.awt.Color(90, 148, 210));
        lbReenterCreate.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbReenterCreate.setText("Re-enter password");

        txtCheckPassword.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtCheckPassword.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(12, 91, 160)));

        cbCreate.setBackground(new java.awt.Color(250, 250, 250));
        cbCreate.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cbCreate.setForeground(new java.awt.Color(12, 91, 160));
        cbCreate.setText("Create Billboards");
        cbCreate.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(12, 91, 160)));

        cbEditBb.setBackground(new java.awt.Color(250, 250, 250));
        cbEditBb.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cbEditBb.setForeground(new java.awt.Color(12, 91, 160));
        cbEditBb.setText("Edit All Billboards");
        cbEditBb.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(12, 91, 160)));

        cbEditUser.setBackground(new java.awt.Color(250, 250, 250));
        cbEditUser.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cbEditUser.setForeground(new java.awt.Color(12, 91, 160));
        cbEditUser.setText("Edit Users");
        cbEditUser.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(12, 91, 160)));

        cbSchedule.setBackground(new java.awt.Color(250, 250, 250));
        cbSchedule.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cbSchedule.setForeground(new java.awt.Color(12, 91, 160));
        cbSchedule.setText("Schedule Billboards");
        cbSchedule.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(12, 91, 160)));

        javax.swing.GroupLayout createUserPanelLayout = new javax.swing.GroupLayout(createUserPanel);
        createUserPanel.setLayout(createUserPanelLayout);
        createUserPanelLayout.setHorizontalGroup(
            createUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, createUserPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbTitleCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53))
            .addGroup(createUserPanelLayout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addGroup(createUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(createUserPanelLayout.createSequentialGroup()
                        .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(createUserPanelLayout.createSequentialGroup()
                        .addGroup(createUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtUsername, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 340, Short.MAX_VALUE)
                            .addGroup(createUserPanelLayout.createSequentialGroup()
                                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                                .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(createUserPanelLayout.createSequentialGroup()
                                .addGroup(createUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbPermissionCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbPasswordCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbUsernameCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(63, 63, 63))
                    .addGroup(createUserPanelLayout.createSequentialGroup()
                        .addGroup(createUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtCheckPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 338, Short.MAX_VALUE)
                            .addComponent(lbReenterCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbCreate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbEditBb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbEditUser, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbSchedule, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        createUserPanelLayout.setVerticalGroup(
            createUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createUserPanelLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(lbTitleCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lbUsernameCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbPasswordCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(lbReenterCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCheckPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lbPermissionCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbCreate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbEditBb)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbSchedule)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbEditUser)
                .addGap(95, 95, 95)
                .addGroup(createUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(78, Short.MAX_VALUE))
        );

        editUserRootPanel.add(createUserPanel);
        createUserPanel.setBounds(1430, 360, 470, 660);

        lbBackground.setBackground(new java.awt.Color(245, 245, 245));
        lbBackground.setIcon(new javax.swing.ImageIcon("src/main/java/BillboardControlPanel/view/images/bg_blue.png")); // NOI18N
        editUserRootPanel.add(lbBackground);
        lbBackground.setBounds(384, 250, 1536, 830);

        welcomePanel.setBackground(new java.awt.Color(110, 89, 222));
        welcomePanel.setPreferredSize(new Dimension(screenSize.width / 5 * 4, 150 ));

        lbWelcomeTitle.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lbWelcomeTitle.setForeground(new java.awt.Color(204, 204, 204));
        lbWelcomeTitle.setText("Edit Users");

        lbWelcomeInfo.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        lbWelcomeInfo.setForeground(new java.awt.Color(204, 204, 204));
        lbWelcomeInfo.setText("Modify users' information as you wish");
        lbWelcomeInfo.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        javax.swing.GroupLayout welcomePanelLayout = new javax.swing.GroupLayout(welcomePanel);
        welcomePanel.setLayout(welcomePanelLayout);
        welcomePanelLayout.setHorizontalGroup(
            welcomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(welcomePanelLayout.createSequentialGroup()
                .addGap(94, 94, 94)
                .addGroup(welcomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbWelcomeInfo)
                    .addComponent(lbWelcomeTitle))
                .addContainerGap(919, Short.MAX_VALUE))
        );
        welcomePanelLayout.setVerticalGroup(
            welcomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, welcomePanelLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(lbWelcomeTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbWelcomeInfo)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        editUserRootPanel.add(welcomePanel);
        welcomePanel.setBounds(384, 90, 1610, 160);

        lbAppName.setBackground(new java.awt.Color(51, 51, 51));
        lbAppName.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lbAppName.setText("We ♥ BBCreator");
        editUserRootPanel.add(lbAppName);
        lbAppName.setBounds(470, 20, 137, 25);

        lbClose.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lbClose.setForeground(new java.awt.Color(54, 33, 89));
        lbClose.setText("X");
        lbClose.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lbClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lbCloseMousePressed(evt);
            }
        });
        editUserRootPanel.add(lbClose);
        lbClose.setBounds(1880, 10, 16, 32);

        lbUserInfo.setBackground(new java.awt.Color(51, 51, 51));
        lbUserInfo.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        lbUserInfo.setText("Username: " + currentUser + "  ID: " + userId );
        editUserRootPanel.add(lbUserInfo);
        lbUserInfo.setBounds(1600, 15, 220, 22);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(editUserRootPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(editUserRootPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lbIconHomebtn_homeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbIconHomebtn_homeMouseEntered
        btnHome.setBackground(new java.awt.Color(85,65,118));
    }//GEN-LAST:event_lbIconHomebtn_homeMouseEntered

    private void lbIconHomebtn_homeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbIconHomebtn_homeMouseExited
        btnHome.setBackground(new java.awt.Color(64, 43, 100));
    }//GEN-LAST:event_lbIconHomebtn_homeMouseExited

    private void lbIconHomeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbIconHomeMousePressed
        new Home("").setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_lbIconHomeMousePressed

    private void lbHomebtn_homeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbHomebtn_homeMouseEntered
        btnHome.setBackground(new java.awt.Color(85,65,118));
    }//GEN-LAST:event_lbHomebtn_homeMouseEntered

    private void lbHomebtn_homeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbHomebtn_homeMouseExited
        btnHome.setBackground(new java.awt.Color(64, 43, 100));
    }//GEN-LAST:event_lbHomebtn_homeMouseExited

    private void lbHomejLabel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbHomejLabel1MousePressed
        new Home("").setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_lbHomejLabel1MousePressed

    private void btnHomeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnHomeMouseEntered
        btnHome.setBackground(new java.awt.Color(85,65,118));
    }//GEN-LAST:event_btnHomeMouseEntered

    private void btnHomeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnHomeMouseExited
        btnHome.setBackground(new java.awt.Color(64, 43, 100));
    }//GEN-LAST:event_btnHomeMouseExited

    private void btnHomejLabel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnHomejLabel1MousePressed
        new Home(token).setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnHomejLabel1MousePressed

    private void lbiconSchedulelb_schedule_billboardsMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbiconSchedulelb_schedule_billboardsMouseEntered
        btnSchedule.setBackground(new java.awt.Color(85,65,118));
    }//GEN-LAST:event_lbiconSchedulelb_schedule_billboardsMouseEntered

    private void lbiconSchedulelb_schedule_billboardsMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbiconSchedulelb_schedule_billboardsMouseExited
        btnSchedule.setBackground(new java.awt.Color(64, 43, 100));
    }//GEN-LAST:event_lbiconSchedulelb_schedule_billboardsMouseExited

    private void lbScheduleMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbScheduleMouseEntered
        btnSchedule.setBackground(new java.awt.Color(85,65,118));
    }//GEN-LAST:event_lbScheduleMouseEntered

    private void lbScheduleMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbScheduleMouseExited
        btnSchedule.setBackground(new java.awt.Color(64, 43, 100));
    }//GEN-LAST:event_lbScheduleMouseExited

    private void btnSchedulelb_schedule_billboardsMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSchedulelb_schedule_billboardsMouseEntered
        btnSchedule.setBackground(new java.awt.Color(85,65,118));
    }//GEN-LAST:event_btnSchedulelb_schedule_billboardsMouseEntered

    private void btnSchedulelb_schedule_billboardsMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSchedulelb_schedule_billboardsMouseExited
        btnSchedule.setBackground(new java.awt.Color(64, 43, 100));
    }//GEN-LAST:event_btnSchedulelb_schedule_billboardsMouseExited

    private void btnDeleteTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteTableActionPerformed
        // Get user information to delete from selected row
        int removeIndex = userTable.getSelectedRow();
        User deleteUser = listUser.get(removeIndex);

        if (removeIndex < 0) {
            JOptionPane.showMessageDialog(editUserRootPanel, "Choose a billboard to delete");
        } else if (listUser.size() == 0) {
            JOptionPane.showMessageDialog(editUserRootPanel, "No billboards to delete");
        } else if (deleteUser.getUsername().equals(this.currentUser)) {
            JOptionPane.showMessageDialog(editUserRootPanel, "Cannot delete your own account");
        }

        else {
            try{
                //Establish connection to server
                ServerConnection svCon = new ServerConnection();
                DeleteUserRequest req = new DeleteUserRequest();
                req.setToken(this.token);
                req.setUserId(Integer.toString(deleteUser.getUserId()));
                svCon.sendRequest(req);
                //Get response from server
                DeleteUserResponse res = (DeleteUserResponse) Message.nextMessageFromSocket(svCon.getChannel(), svCon.getByteBuffer());
                System.out.println(res.getMessage());
                if (res.isSuccessful()) {
                    JOptionPane.showMessageDialog(editUserRootPanel, "Delete successfully");
                } else {
                    JOptionPane.showMessageDialog(editUserRootPanel, res.getMessage());
                    if(res.sessionExpired()){
                        System.exit(0);
                    }
                }
                new EditUserPage(token).setVisible(true);
                this.dispose();

            }  catch (IOException | ServerClosedException e) {
                JOptionPane.showMessageDialog(editUserRootPanel, e.getMessage());
                System.exit(0);
            }

        }
    }//GEN-LAST:event_btnDeleteTableActionPerformed

    private void btnEditTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditTableActionPerformed
        createUserPanel.setVisible(false);
        // Select an user to start editing
        int selectedIndex = userTable.getSelectedRow();
        if (listUser.size() == 0){
            JOptionPane.showMessageDialog(editUserRootPanel, "Add more users to edit");
        }else if (selectedIndex < 0) {
            JOptionPane.showMessageDialog(editUserRootPanel, "Choose a user to start editing");
        }else {
            setEditData(listUser.get(selectedIndex));
            editUserPanel.setVisible(true);
        }
    }//GEN-LAST:event_btnEditTableActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        createUserPanel.setVisible(false);
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        String username, password, checkPassword;
        ArrayList<String> permission = new ArrayList<String>();
        boolean isOk = true;
        boolean isValidPassword = true, isValidUsername = true, isValidPermission = true;

        // Get information from input fields
        username = txtUsername.getText().toLowerCase();
        password =  new String(txtPassword.getPassword());
        checkPassword =  new String(txtCheckPassword.getPassword());
        if (cbCreate.isSelected()) {
            permission.add("CB");
        }
        if (cbEditBb.isSelected()) {
            permission.add("EB");
        }
        if (cbSchedule.isSelected()){
            permission.add("SB");
        }
        if (cbEditUser.isSelected()){
            permission.add("EU");
        }


        // Check if the input fields are all valid
        if (!password.equals(checkPassword) || password.isEmpty()){
            isOk = false;
            isValidPassword = false;
        } else if (!cbCreate.isSelected() && !cbEditBb.isSelected() && !cbSchedule.isSelected() && !cbEditUser.isSelected()) {
            isValidPermission = false;
            isOk = false;
        } else {
            for (User u : listUser) {
                if (u.getUsername().equals(username)) {
                    isOk = false;
                    isValidUsername = false;
                    break;
                }
            }
        }

        // If all input fields are valid
        if(isOk) {
            try {
                //Hash password to send to server
                password = Hash.hashString(password);
                String per = String.join(",", permission);

                //Establish connection to the server
                ServerConnection svCon = new ServerConnection();
                CreateUserRequest req = new CreateUserRequest();
                req.setToken(this.token);
                req.setUsername(username);
                req.setPassword(password);
                req.setPermission(per);
                svCon.sendRequest(req);

                //Get response from server
                CreateUserResponse res = (CreateUserResponse) Message.nextMessageFromSocket(svCon.getChannel(), svCon.getByteBuffer());
                if (res.isSuccessful()) {
                    JOptionPane.showMessageDialog(editUserRootPanel, "Add successfully");
                } else {
                    JOptionPane.showMessageDialog(editUserRootPanel, res.getMessage());
                    if(res.sessionExpired()){
                        System.exit(0);
                    }
                }
            } catch (NoSuchAlgorithmException | IOException | ServerClosedException e) {
                JOptionPane.showMessageDialog(editUserRootPanel, e.getMessage());
                System.exit(0);
            }

            // Empty the text field after adding
            txtUsername.setText("");
            txtPassword.setText("");
            txtCheckPassword.setText("");
            cbCreate.setSelected(false);
            cbEditBb.setSelected(false);
            cbSchedule.setSelected(false);
            cbEditUser.setSelected(false);
            createUserPanel.setVisible(false);

            new EditUserPage(token).setVisible(true);
            this.dispose();

        } else {
            if(!isValidPassword)
                JOptionPane.showMessageDialog(editUserRootPanel, "The password doesn't match.");
            else if (!isValidPermission)
                JOptionPane.showMessageDialog(editUserRootPanel, "User mus have at least 1 permission.");
            else if (!isValidUsername)
                JOptionPane.showMessageDialog(editUserRootPanel, "The username has been used.");
        }

    }//GEN-LAST:event_btnSaveActionPerformed

    private void lbCloseMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbCloseMousePressed
        System.exit(0);
    }//GEN-LAST:event_lbCloseMousePressed

    private void btnAddTabelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddTabelActionPerformed
        if (this.permission.contains("EU")) {
            createUserPanel.setVisible(true);
            editUserPanel.setVisible(false);
        }
        else {
            JOptionPane.showMessageDialog(editUserRootPanel, "Do not have permission");
        }
    }//GEN-LAST:event_btnAddTabelActionPerformed


    private void btnCancelEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelEditActionPerformed
        editUserPanel.setVisible(false);
    }//GEN-LAST:event_btnCancelEditActionPerformed

    private void btnSaveEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveEditActionPerformed
        String username, password;
        ArrayList<String> permission = new ArrayList<String>();
        int userId;
        boolean isOk = true, isValidPassword = true, isValidPermission = true;

        // Get information from input fields
        userId = Integer.parseInt(txtEditUserId.getText());
        username = txtEditUsername.getText().toLowerCase();
        password =  new String(txtEditPassword.getPassword());

        if (cbCreate1.isSelected()) {
            permission.add("CB");
        }
        if (cbEditBb1.isSelected()) {
            permission.add("EB");
        }
        if (cbSchedule1.isSelected()){
            permission.add("SB");
        }
        if (cbEditUser1.isSelected()){
            permission.add("EU");
        }
        String checkPassword =  new String(txtEditCheckPassword.getPassword());


        // Check if the input fields are all valid
        if ((!password.equals(checkPassword))){
            isOk = false;
            isValidPassword = false;
        } else if (!cbCreate1.isSelected() && !cbEditBb1.isSelected() && !cbSchedule1.isSelected() && !cbEditUser1.isSelected()) {
            isValidPermission = false;
            isOk = false;

        }


        // If the input fields are all valid
        if(isOk) {
            // If users do not enter password, the password will not change
            if (password.isEmpty()) {
                    try{
                        // Establish connection to the server
                        ServerConnection svCon = new ServerConnection();
                        EditUserNoPassRequest req = new EditUserNoPassRequest();
                        String per = String.join("," , permission);
                        req.setToken(this.token);
                        req.setUser_id(Integer.toString(userId));
                        req.setUsername(username);
                        req.setPermission(per);
                        svCon.sendRequest(req);

                        // Get response from server
                        EditUserResponse res = (EditUserResponse) Message.nextMessageFromSocket(svCon.getChannel(), svCon.getByteBuffer());
                        if (!res.isSuccessful()) {
                            JOptionPane.showMessageDialog(editUserRootPanel, res.getMessage());
                            if(res.sessionExpired()){
                                System.exit(0);
                            }
                        }
                    }catch (IOException | ServerClosedException e) {
                        JOptionPane.showMessageDialog(editUserRootPanel, e.getMessage());
                        System.exit(0);
                    }
            } else {
                try{
                    password = Hash.hashString( new String(txtEditPassword.getPassword()));
                    String per = String.join("," , permission);
                    ServerConnection svCon = new ServerConnection();
                    EditUserRequest req = new EditUserRequest();
                    req.setToken(this.token);
                    req.setUser_id(Integer.toString(userId));
                    req.setUsername(username);
                    req.setPassword(password);
                    req.setPermission(per);
                    svCon.sendRequest(req);
                    EditUserResponse res = (EditUserResponse) Message.nextMessageFromSocket(svCon.getChannel(), svCon.getByteBuffer());
                    if (!res.isSuccessful()) {
                        JOptionPane.showMessageDialog(editUserRootPanel, res.getMessage());
                        if(res.sessionExpired()){
                            System.exit(0);
                        }
                    }
                } catch (NoSuchAlgorithmException | IOException | ServerClosedException e) {
                    JOptionPane.showMessageDialog(editUserRootPanel, e.getMessage());
                    System.exit(0);
                }

            }


            //Log out if users edit their own account
            try{
                if (username.equals(this.currentUser)) {
                    ServerConnection svCon = new ServerConnection();
                    svCon.sendRequest(new LogoutRequest());
                    JOptionPane.showMessageDialog(editUserRootPanel, "Edit successfully. Please re-login");
                    new LogIn().setVisible(true);
                    this.dispose();
                } else {
                    JOptionPane.showMessageDialog(editUserRootPanel, "Edit successfully");
                }

            } catch (ServerClosedException e) {
                JOptionPane.showMessageDialog(editUserRootPanel, e.getMessage());
                System.exit(0);
            }

        } else {
            if(!isValidPassword)
                JOptionPane.showMessageDialog(editUserRootPanel, "The password seems wrong.");
            else if (!isValidPermission)
                JOptionPane.showMessageDialog(editUserRootPanel, "User mus have at least 1 permission.");

        }
        
        
        
        
        
    }//GEN-LAST:event_btnSaveEditActionPerformed

    private void btnScheduleMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnScheduleMousePressed
        // Access Schedule Billboards page if users have "SB" permission
        if (this.permission.contains("SB")) {
            ScheduleBillboardsPage scheduleBillboardsPage = new ScheduleBillboardsPage(token);
            scheduleBillboardsPage.setVisible(true);
            this.setVisible(false);
        }
        else {
            JOptionPane.showMessageDialog(editUserPanel, "Do not have permission");
        }
        
    }//GEN-LAST:event_btnScheduleMousePressed

    private void btnListMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnListMouseEntered
        btnList.setBackground(new java.awt.Color(85,65,118));
        
    }//GEN-LAST:event_btnListMouseEntered

    private void btnListMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnListMouseExited
        btnList.setBackground(new java.awt.Color(64, 43, 100));
        
    }//GEN-LAST:event_btnListMouseExited

    private void btnListMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnListMousePressed

        ListBillboardsPage listBillboardsPage = new ListBillboardsPage(token);
        listBillboardsPage.setVisible(true);
        this.setVisible(false);


    }//GEN-LAST:event_btnListMousePressed

    private void lbIconCreateMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbIconCreateMouseEntered
        btnCreate.setBackground(new java.awt.Color(85,65,118));

    }//GEN-LAST:event_lbIconCreateMouseEntered

    private void lbIconCreateMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbIconCreateMouseExited
        btnCreate.setBackground(new java.awt.Color(64, 43, 100));
    }//GEN-LAST:event_lbIconCreateMouseExited

    private void lbIconCreateMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbIconCreateMousePressed
        // Access Create Billboards Page if users have "CB" permission
        if (this.permission.contains("CB")) {
            CreateBillboardsPage createBillboardsPage = new CreateBillboardsPage(token);
            createBillboardsPage.setVisible(true);
            this.setVisible(false);
        }
        else {
            JOptionPane.showMessageDialog(editUserPanel, "Do not have permission");
        }

    }//GEN-LAST:event_lbIconCreateMousePressed

    private void btnLogOutMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLogOutMousePressed
        try{
            ServerConnection svCon = new ServerConnection();
            svCon.sendRequest(new LogoutRequest());
            new LogIn().setVisible(true);
            this.dispose();
        } catch (ServerClosedException e) {
            JOptionPane.showMessageDialog(editUserRootPanel, e.getMessage());
            System.exit(0);
        }
    }//GEN-LAST:event_btnLogOutMousePressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddTabel;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnCancelEdit;
    private javax.swing.JPanel btnCreate;
    private javax.swing.JButton btnDeleteTable;
    private javax.swing.JPanel btnEdit;
    private javax.swing.JButton btnEditTable;
    private javax.swing.JPanel btnHome;
    private javax.swing.JPanel btnList;
    private javax.swing.JPanel btnLogOut;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSaveEdit;
    private javax.swing.JPanel btnSchedule;
    private javax.swing.JCheckBox cbCreate;
    private javax.swing.JCheckBox cbCreate1;
    private javax.swing.JCheckBox cbEditBb;
    private javax.swing.JCheckBox cbEditBb1;
    private javax.swing.JCheckBox cbEditUser;
    private javax.swing.JCheckBox cbEditUser1;
    private javax.swing.JCheckBox cbSchedule;
    private javax.swing.JCheckBox cbSchedule1;
    private javax.swing.JPanel createUserPanel;
    private javax.swing.JPanel editUserPanel;
    private javax.swing.JPanel editUserRootPanel;
    private javax.swing.JLabel lbAppName;
    private javax.swing.JLabel lbAppNameLeft;
    private javax.swing.JLabel lbBackground;
    private javax.swing.JLabel lbClose;
    private javax.swing.JLabel lbCreate;
    private javax.swing.JLabel lbEdit;
    private javax.swing.JLabel lbHome;
    private javax.swing.JLabel lbIconCreate;
    private javax.swing.JLabel lbIconEdit;
    private javax.swing.JLabel lbIconHome;
    private javax.swing.JLabel lbIconList;
    private javax.swing.JLabel lbIconLogout;
    private javax.swing.JLabel lbList;
    private javax.swing.JLabel lbListTitle;
    private javax.swing.JLabel lbLogout;
    private javax.swing.JLabel lbPasswordCreate;
    private javax.swing.JLabel lbPasswordEdit;
    private javax.swing.JLabel lbPermissionCreate;
    private javax.swing.JLabel lbPermissionEdit;
    private javax.swing.JLabel lbReenterCreate;
    private javax.swing.JLabel lbReenterEdit;
    private javax.swing.JLabel lbSchedule;
    private javax.swing.JLabel lbTitleCreate;
    private javax.swing.JLabel lbTitleEdit;
    private javax.swing.JLabel lbUserIdEdit;
    private javax.swing.JLabel lbUserInfo;
    private javax.swing.JLabel lbUsernameCreate;
    private javax.swing.JLabel lbUsernameEdit;
    private javax.swing.JLabel lbWelcomeInfo;
    private javax.swing.JLabel lbWelcomeTitle;
    private javax.swing.JLabel lbiconSchedule;
    private javax.swing.JPanel listPanel;
    private javax.swing.JSeparator separator;
    private javax.swing.JPanel sidepanel;
    private javax.swing.JScrollPane tableScrollPanel;
    private javax.swing.JPasswordField txtCheckPassword;
    private javax.swing.JPasswordField txtEditCheckPassword;
    private javax.swing.JPasswordField txtEditPassword;
    private javax.swing.JTextField txtEditUserId;
    private javax.swing.JTextField txtEditUsername;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtUsername;
    private javax.swing.JTable userTable;
    private javax.swing.JPanel welcomePanel;
    // End of variables declaration//GEN-END:variables

    /**
     * Show table
     */
    private void showTable() {
        model.setRowCount(0); //reset content in table to 0
        for (User u : listUser) {
            model.addRow(new Object[]{
                    u.getUserId(), u.getUsername(),  u.getPermission(), u.getCreatedAt(), u.getUpdateAt()
            });
        }
    }

    /**
     * Show user's information in edit panel
     * @param u - user model
     */
    private void setEditData(User u) {
        txtEditUsername.setEnabled(false);
        cbCreate1.setSelected(false);
        cbEditBb1.setSelected(false);
        cbSchedule1.setSelected(false);
        cbEditUser1.setSelected(false);

        cbCreate1.setEnabled(true);
        cbEditBb1.setEnabled(true);
        cbSchedule1.setEnabled(true);
        cbEditUser1.setEnabled(true);

        txtEditUserId.setText( Integer.toString(u.getUserId()));
        txtEditUsername.setText(u.getUsername());
        txtEditPassword.setText(u.getPassword());

        System.out.println(u.getUsername());
        ArrayList<String> permission = u.getPermission();
        if (permission.contains("CB")) {
            cbCreate1.setSelected(true);
        }
        if (permission.contains("EB")) {
            cbEditBb1.setSelected(true);
        }
        if (permission.contains("SB")) {
            cbSchedule1.setSelected(true);
        }
        if (permission.contains("EU")) {
            cbEditUser1.setSelected(true);
        }

        if (u.getUsername().equals(this.currentUser)) {
            if ( cbEditUser1.isSelected()) {
                cbEditUser1.setEnabled(false);
            } else {
                cbCreate1.setEnabled(false);
                cbEditBb1.setEnabled(false);
                cbSchedule1.setEnabled(false);
                cbEditUser1.setEnabled(false);

            }

        }

    }

}
